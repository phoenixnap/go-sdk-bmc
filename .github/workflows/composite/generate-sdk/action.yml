name: 'Generate SDK'
description: 'Generate SDK for a given API'
inputs:
  spec-link: 
    description: 'Link to the spec file.'
    required: true
  package-name:
    description: 'Name of the go module.'
    required: true
runs:
  using: "composite"
  steps:
    - name: Logging head_ref and ref_name
      shell: bash
      run: |
        echo "head_ref = ${{ github.head_ref }}"
        echo "ref_name = ${{ github.ref_name }}"
    - name: Install node
      uses: actions/setup-node@v2
    - name: Install openapi-generator-cli
      shell: bash
      run: npm install -g @openapitools/openapi-generator-cli
      # First part of the cleanup - makes sure obsolete files get deleted.
      # Everything else will be re-generated.
    - name: Cleanup existing files
      shell: bash
      run: |
        echo "Moving VERSION.go out..."
        mv ./${{ inputs.package-name }}/VERSION.go ./VERSION.go

        echo "Cleaning up ${{ inputs.package-name }}..."
        rm -r ./${{ inputs.package-name }}/*

        echo "Moving VERSION.go back in..."
        mv ./VERSION.go ./${{ inputs.package-name }}/VERSION.go
    - name: Generate SDK
      shell: bash
      run: |
        suffix=$(./extract-version-suffix.sh ./${{ inputs.package-name }}/VERSION.go)

        openapi-generator-cli generate \
          -i ${{ inputs.spec-link }} \
          -c openapi-generator-config.yaml \
          -o ${{ inputs.package-name }} \
          --additional-properties packageName=${{ inputs.package-name }} \
          --additional-properties majorVersion=$suffix \
          --additional-properties disallowAdditionalPropertiesIfNotPresent=false \
          --global-property modelTests=false,apiTests=false
    - uses: ./.github/workflows/composite/setup-go
    - name: Fix goimports
      shell: bash
      run: go install golang.org/x/tools/cmd/goimports@v0.17.0 && goimports -w .
    - name: Download spec files
      shell: bash
      run: wget ${{ inputs.spec-link }} -O ./${{ inputs.package-name }}/${{ inputs.package-name }}.spec.yaml
    - name: Upload SDK Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.package-name }}
        path: ${{ inputs.package-name }}