name: generate-sdk

on:
  pull_request:
    branches:
      - develop
      - 'release/**'
  schedule:
    - cron: '15 */4 * * *'
  workflow_dispatch:

jobs:

  # Generate stage
  generate-bmcapi:
    name: Generate BMC API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite/generate-sdk
        with:
          spec-link: https://developers.phoenixnap.com/portals/api/sites/phoenixnap-prod-developerportal/liveportal/apis/bmc/download_spec
          package-name: bmcapi
  generate-rancherapi:
    name: Generate Rancher API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite/generate-sdk
        with:
          spec-link: https://developers.phoenixnap.com/portals/api/sites/phoenixnap-prod-developerportal/liveportal/apis/rancher/download_spec
          package-name: ranchersolutionapi
  generate-networkapi:
    name: Generate Network API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite/generate-sdk
        with:
          spec-link: https://developers.phoenixnap.com/portals/api/sites/phoenixnap-prod-developerportal/liveportal/apis/networks/download_spec
          package-name: networkapi
  generate-ipapi:
    name: Generate IP API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite/generate-sdk
        with:
          spec-link: https://developers.phoenixnap.com/portals/api/sites/phoenixnap-prod-developerportal/liveportal/apis/ips/download_spec
          package-name: ipapi
  generate-auditapi:
    name: Generate Audit API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite/generate-sdk
        with:
          spec-link: https://developers.phoenixnap.com/portals/api/sites/phoenixnap-prod-developerportal/liveportal/apis/bmc-audit/download_spec
          package-name: auditapi
  generate-tagapi:
    name: Generate Tag API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite/generate-sdk
        with:
          spec-link: https://developers.phoenixnap.com/portals/api/sites/phoenixnap-prod-developerportal/liveportal/apis/tags/download_spec
          package-name: tagapi
  generate-billingapi:
    name: Generate Billing API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/composite/generate-sdk
        with:
          spec-link: https://developers.phoenixnap.com/portals/api/sites/phoenixnap-prod-developerportal/liveportal/apis/bmc-billing/download_spec
          package-name: billingapi

  # Push generated code
  push-changes:
    name: Push Changes
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'schedule') ||
      (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/develop') || (
        startsWith(github.head_ref, 'feature') == true &&
        github.base_ref == 'develop' &&
        github.event.pull_request.head.repo.full_name == 'phoenixnap/go-sdk-bmc'
      )
    needs:
      - generate-bmcapi
      - generate-rancherapi
      - generate-networkapi
      - generate-ipapi
      - generate-auditapi
      - generate-tagapi
      - generate-billingapi
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ github.event_name == 'schedule' && 'develop' || github.head_ref }}
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Add and Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -A

          if test "$(git status --porcelain=v1 2>/dev/null | wc -l)" -gt "0" ; then git commit -m "Add changes"; else echo No changes found; fi
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event_name == 'schedule' && 'develop' || github.head_ref }}
  
  # Build stage
  build-bmcapi:
    name: Build BMC API
    runs-on: ubuntu-latest
    needs:
      - generate-bmcapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: bmcapi
  build-rancherapi:
    name: Build Rancher API
    runs-on: ubuntu-latest
    needs:
      - generate-rancherapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: ranchersolutionapi
  build-networkapi:
    name: Build Network API
    runs-on: ubuntu-latest
    needs:
      - generate-networkapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: networkapi
  build-ipapi:
    name: Build IP API
    runs-on: ubuntu-latest
    needs:
      - generate-ipapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: ipapi
  build-auditapi:
    name: Build Audit API
    runs-on: ubuntu-latest
    needs:
      - generate-auditapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: auditapi
  build-tagapi:
    name: Build Tag API
    runs-on: ubuntu-latest
    needs:
      - generate-tagapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: tagapi
  build-billingapi:
    name: Build Billing API
    runs-on: ubuntu-latest
    needs:
      - generate-billingapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: billingapi
  
  # Lint stage
  lint-bmcapi:
    name: Lint BMC API
    runs-on: ubuntu-latest
    needs:
      - build-bmcapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: bmcapi
  lint-rancherapi:
    name: Lint Rancher API
    runs-on: ubuntu-latest
    needs:
      - build-rancherapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: ranchersolutionapi
  lint-networkapi:
    name: Lint Network API
    runs-on: ubuntu-latest
    needs:
      - build-networkapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: networkapi
  lint-ipapi:
    name: Lint IP API
    runs-on: ubuntu-latest
    needs:
      - build-ipapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: ipapi
  lint-auditapi:
    name: Lint Audit API
    runs-on: ubuntu-latest
    needs:
      - build-auditapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: auditapi
  lint-tagapi:
    name: Lint Tag API
    runs-on: ubuntu-latest
    needs:
      - build-tagapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: tagapi
  lint-billingapi:
    name: Lint Tag API
    runs-on: ubuntu-latest
    needs:
      - build-billingapi
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: billingapi

  test-auditapi:
    name: Test Audit API
    runs-on: ubuntu-latest
    needs:
      - lint-auditapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/test-sdk
        with:
          test-suite: TestAuditApiTestSuite
  test-ipapi:
    name: Test IP API
    runs-on: ubuntu-latest
    needs:
      - lint-ipapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/test-sdk
        with:
          test-suite: TestIpApiTestSuite
  test-bmcapi:
    name: Test BMC API
    runs-on: ubuntu-latest
    needs:
      - lint-bmcapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/test-sdk
        with:
          test-suite: TestBmcApiTestSuite
  test-tagapi:
    name: Test Tag API
    runs-on: ubuntu-latest
    needs:
      - lint-tagapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/test-sdk
        with:
          test-suite: TestTagApiTestSuite
  test-rancherapi:
    name: Test Rancher API
    runs-on: ubuntu-latest
    needs:
      - lint-rancherapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/test-sdk
        with:
          test-suite: TestRancherSolutionApiTestSuite
  test-networkapi:
    name: Test Network API
    runs-on: ubuntu-latest
    needs:
      - lint-networkapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - uses: ./.github/workflows/composite/test-sdk
        with:
          test-suite: TestNetworkApiTestSuite
  publish-test-results:
    name: Publish Test Results
    needs:
      - test-bmcapi
      - test-rancherapi
      - test-networkapi
      - test-ipapi
      - test-auditapi
      - test-tagapi
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: test-reports
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: test-reports/**/*.xml
          check_name: "Test Results"


