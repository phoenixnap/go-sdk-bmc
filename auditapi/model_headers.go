/*
Audit Log API

The Audit Logs API lets you read audit log entries and track API calls or activities in the Bare Metal Cloud Portal.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/bmc-server-management-via-api#audit-log-api' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/audit/v1/)</b>

API version: 1.0
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auditapi

import (
	"encoding/json"
)

// Headers The headers received as part of this request.
type Headers struct {
	// The UA String
	UserAgent string `json:"userAgent"`
}

// NewHeaders instantiates a new Headers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeaders(userAgent string) *Headers {
	this := Headers{}
	this.UserAgent = userAgent
	return &this
}

// NewHeadersWithDefaults instantiates a new Headers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeadersWithDefaults() *Headers {
	this := Headers{}
	return &this
}

// GetUserAgent returns the UserAgent field value
func (o *Headers) GetUserAgent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value
// and a boolean to check if the value has been set.
func (o *Headers) GetUserAgentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserAgent, true
}

// SetUserAgent sets field value
func (o *Headers) SetUserAgent(v string) {
	o.UserAgent = v
}

func (o Headers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["userAgent"] = o.UserAgent
	}
	return json.Marshal(toSerialize)
}

type NullableHeaders struct {
	value *Headers
	isSet bool
}

func (v NullableHeaders) Get() *Headers {
	return v.value
}

func (v *NullableHeaders) Set(val *Headers) {
	v.value = val
	v.isSet = true
}

func (v NullableHeaders) IsSet() bool {
	return v.isSet
}

func (v *NullableHeaders) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeaders(val *Headers) *NullableHeaders {
	return &NullableHeaders{value: val, isSet: true}
}

func (v NullableHeaders) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeaders) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
