/*
Billing API

Automate your infrastructure billing with the Bare Metal Cloud Billing API. Reserve your server instances to ensure guaranteed resource availability for 12, 24, and 36 months. Retrieve your serverâ€™s rated usage for a given period and enable or disable auto-renewals.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/phoenixnap-bare-metal-cloud-billing-models' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/billing/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billingapi

import (
	"encoding/json"
)

// checks if the ApplicableDiscounts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicableDiscounts{}

// ApplicableDiscounts Represents the applicable discount details for a product, including the discounted price and discount information.
type ApplicableDiscounts struct {
	// The price of the product after applying a discount.
	DiscountedPrice *float32          `json:"discountedPrice,omitempty"`
	DiscountDetails []DiscountDetails `json:"discountDetails,omitempty"`
}

// NewApplicableDiscounts instantiates a new ApplicableDiscounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicableDiscounts() *ApplicableDiscounts {
	this := ApplicableDiscounts{}
	return &this
}

// NewApplicableDiscountsWithDefaults instantiates a new ApplicableDiscounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicableDiscountsWithDefaults() *ApplicableDiscounts {
	this := ApplicableDiscounts{}
	return &this
}

// GetDiscountedPrice returns the DiscountedPrice field value if set, zero value otherwise.
func (o *ApplicableDiscounts) GetDiscountedPrice() float32 {
	if o == nil || IsNil(o.DiscountedPrice) {
		var ret float32
		return ret
	}
	return *o.DiscountedPrice
}

// GetDiscountedPriceOk returns a tuple with the DiscountedPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicableDiscounts) GetDiscountedPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountedPrice) {
		return nil, false
	}
	return o.DiscountedPrice, true
}

// HasDiscountedPrice returns a boolean if a field has been set.
func (o *ApplicableDiscounts) HasDiscountedPrice() bool {
	if o != nil && !IsNil(o.DiscountedPrice) {
		return true
	}

	return false
}

// SetDiscountedPrice gets a reference to the given float32 and assigns it to the DiscountedPrice field.
func (o *ApplicableDiscounts) SetDiscountedPrice(v float32) {
	o.DiscountedPrice = &v
}

// GetDiscountDetails returns the DiscountDetails field value if set, zero value otherwise.
func (o *ApplicableDiscounts) GetDiscountDetails() []DiscountDetails {
	if o == nil || IsNil(o.DiscountDetails) {
		var ret []DiscountDetails
		return ret
	}
	return o.DiscountDetails
}

// GetDiscountDetailsOk returns a tuple with the DiscountDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicableDiscounts) GetDiscountDetailsOk() ([]DiscountDetails, bool) {
	if o == nil || IsNil(o.DiscountDetails) {
		return nil, false
	}
	return o.DiscountDetails, true
}

// HasDiscountDetails returns a boolean if a field has been set.
func (o *ApplicableDiscounts) HasDiscountDetails() bool {
	if o != nil && !IsNil(o.DiscountDetails) {
		return true
	}

	return false
}

// SetDiscountDetails gets a reference to the given []DiscountDetails and assigns it to the DiscountDetails field.
func (o *ApplicableDiscounts) SetDiscountDetails(v []DiscountDetails) {
	o.DiscountDetails = v
}

func (o ApplicableDiscounts) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicableDiscounts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiscountedPrice) {
		toSerialize["discountedPrice"] = o.DiscountedPrice
	}
	if !IsNil(o.DiscountDetails) {
		toSerialize["discountDetails"] = o.DiscountDetails
	}
	return toSerialize, nil
}

type NullableApplicableDiscounts struct {
	value *ApplicableDiscounts
	isSet bool
}

func (v NullableApplicableDiscounts) Get() *ApplicableDiscounts {
	return v.value
}

func (v *NullableApplicableDiscounts) Set(val *ApplicableDiscounts) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicableDiscounts) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicableDiscounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicableDiscounts(val *ApplicableDiscounts) *NullableApplicableDiscounts {
	return &NullableApplicableDiscounts{value: val, isSet: true}
}

func (v NullableApplicableDiscounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicableDiscounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
