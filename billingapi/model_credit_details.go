/*
Billing API

Automate your infrastructure billing with the Bare Metal Cloud Billing API. Reserve your server instances to ensure guaranteed resource availability for 12, 24, and 36 months. Retrieve your serverâ€™s rated usage for a given period and enable or disable auto-renewals.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/phoenixnap-bare-metal-cloud-billing-models' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/billing/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billingapi

import (
	"encoding/json"
	"fmt"
)

// CreditDetails - struct for CreditDetails
type CreditDetails struct {
	PromoCreditDetails  *PromoCreditDetails
	SystemCreditDetails *SystemCreditDetails
}

// PromoCreditDetailsAsCreditDetails is a convenience function that returns PromoCreditDetails wrapped in CreditDetails
func PromoCreditDetailsAsCreditDetails(v *PromoCreditDetails) CreditDetails {
	return CreditDetails{
		PromoCreditDetails: v,
	}
}

// SystemCreditDetailsAsCreditDetails is a convenience function that returns SystemCreditDetails wrapped in CreditDetails
func SystemCreditDetailsAsCreditDetails(v *SystemCreditDetails) CreditDetails {
	return CreditDetails{
		SystemCreditDetails: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreditDetails) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into PromoCreditDetails
	err = json.Unmarshal(data, &dst.PromoCreditDetails)
	if err == nil {
		jsonPromoCreditDetails, _ := json.Marshal(dst.PromoCreditDetails)
		if string(jsonPromoCreditDetails) == "{}" { // empty struct
			dst.PromoCreditDetails = nil
		} else {
			match++
		}
	} else {
		dst.PromoCreditDetails = nil
	}

	// try to unmarshal data into SystemCreditDetails
	err = json.Unmarshal(data, &dst.SystemCreditDetails)
	if err == nil {
		jsonSystemCreditDetails, _ := json.Marshal(dst.SystemCreditDetails)
		if string(jsonSystemCreditDetails) == "{}" { // empty struct
			dst.SystemCreditDetails = nil
		} else {
			match++
		}
	} else {
		dst.SystemCreditDetails = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.PromoCreditDetails = nil
		dst.SystemCreditDetails = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreditDetails)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreditDetails)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreditDetails) MarshalJSON() ([]byte, error) {
	if src.PromoCreditDetails != nil {
		return json.Marshal(&src.PromoCreditDetails)
	}

	if src.SystemCreditDetails != nil {
		return json.Marshal(&src.SystemCreditDetails)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreditDetails) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.PromoCreditDetails != nil {
		return obj.PromoCreditDetails
	}

	if obj.SystemCreditDetails != nil {
		return obj.SystemCreditDetails
	}

	// all schemas are nil
	return nil
}

type NullableCreditDetails struct {
	value *CreditDetails
	isSet bool
}

func (v NullableCreditDetails) Get() *CreditDetails {
	return v.value
}

func (v *NullableCreditDetails) Set(val *CreditDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditDetails(val *CreditDetails) *NullableCreditDetails {
	return &NullableCreditDetails{value: val, isSet: true}
}

func (v NullableCreditDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
