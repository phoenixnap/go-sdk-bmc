/*
Billing API

Automate your infrastructure billing with the Bare Metal Cloud Billing API. Reserve your server instances to ensure guaranteed resource availability for 12, 24, and 36 months. Retrieve your serverâ€™s rated usage for a given period and enable or disable auto-renewals.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/phoenixnap-bare-metal-cloud-billing-models' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/billing/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billingapi

import (
	"encoding/json"
)

// DiscountDetails Discount details.
type DiscountDetails struct {
	// Discount code.
	Code string `json:"code"`
	Type string `json:"type"`
	// A number representing the discount value.
	Value float32 `json:"value"`
}

// NewDiscountDetails instantiates a new DiscountDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscountDetails(code string, type_ string, value float32) *DiscountDetails {
	this := DiscountDetails{}
	this.Code = code
	this.Type = type_
	this.Value = value
	return &this
}

// NewDiscountDetailsWithDefaults instantiates a new DiscountDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscountDetailsWithDefaults() *DiscountDetails {
	this := DiscountDetails{}
	return &this
}

// GetCode returns the Code field value
func (o *DiscountDetails) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *DiscountDetails) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *DiscountDetails) SetCode(v string) {
	o.Code = v
}

// GetType returns the Type field value
func (o *DiscountDetails) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DiscountDetails) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DiscountDetails) SetType(v string) {
	o.Type = v
}

// GetValue returns the Value field value
func (o *DiscountDetails) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *DiscountDetails) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *DiscountDetails) SetValue(v float32) {
	o.Value = v
}

func (o DiscountDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableDiscountDetails struct {
	value *DiscountDetails
	isSet bool
}

func (v NullableDiscountDetails) Get() *DiscountDetails {
	return v.value
}

func (v *NullableDiscountDetails) Set(val *DiscountDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscountDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscountDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscountDetails(val *DiscountDetails) *NullableDiscountDetails {
	return &NullableDiscountDetails{value: val, isSet: true}
}

func (v NullableDiscountDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscountDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
