/*
Billing API

Automate your infrastructure billing with the Bare Metal Cloud Billing API. Reserve your server instances to ensure guaranteed resource availability for 12, 24, and 36 months. Retrieve your serverâ€™s rated usage for a given period and enable or disable auto-renewals.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/phoenixnap-bare-metal-cloud-billing-models' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/billing/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billingapi

import (
	"encoding/json"
)

// checks if the GpuConfigurationMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GpuConfigurationMetadata{}

// GpuConfigurationMetadata GPU configuration details.
type GpuConfigurationMetadata struct {
	// GPU card count.
	Count *float32 `json:"count,omitempty"`
	// GPU name.
	Name                 *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GpuConfigurationMetadata GpuConfigurationMetadata

// NewGpuConfigurationMetadata instantiates a new GpuConfigurationMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGpuConfigurationMetadata() *GpuConfigurationMetadata {
	this := GpuConfigurationMetadata{}
	return &this
}

// NewGpuConfigurationMetadataWithDefaults instantiates a new GpuConfigurationMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGpuConfigurationMetadataWithDefaults() *GpuConfigurationMetadata {
	this := GpuConfigurationMetadata{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *GpuConfigurationMetadata) GetCount() float32 {
	if o == nil || IsNil(o.Count) {
		var ret float32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpuConfigurationMetadata) GetCountOk() (*float32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *GpuConfigurationMetadata) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given float32 and assigns it to the Count field.
func (o *GpuConfigurationMetadata) SetCount(v float32) {
	o.Count = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GpuConfigurationMetadata) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpuConfigurationMetadata) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GpuConfigurationMetadata) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GpuConfigurationMetadata) SetName(v string) {
	o.Name = &v
}

func (o GpuConfigurationMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GpuConfigurationMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GpuConfigurationMetadata) UnmarshalJSON(data []byte) (err error) {
	varGpuConfigurationMetadata := _GpuConfigurationMetadata{}

	err = json.Unmarshal(data, &varGpuConfigurationMetadata)

	if err != nil {
		return err
	}

	*o = GpuConfigurationMetadata(varGpuConfigurationMetadata)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "count")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGpuConfigurationMetadata struct {
	value *GpuConfigurationMetadata
	isSet bool
}

func (v NullableGpuConfigurationMetadata) Get() *GpuConfigurationMetadata {
	return v.value
}

func (v *NullableGpuConfigurationMetadata) Set(val *GpuConfigurationMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableGpuConfigurationMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableGpuConfigurationMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGpuConfigurationMetadata(val *GpuConfigurationMetadata) *NullableGpuConfigurationMetadata {
	return &NullableGpuConfigurationMetadata{value: val, isSet: true}
}

func (v NullableGpuConfigurationMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGpuConfigurationMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
