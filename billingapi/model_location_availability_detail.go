/*
Billing API

Automate your infrastructure billing with the Bare Metal Cloud Billing API. Reserve your server instances to ensure guaranteed resource availability for 12, 24, and 36 months. Retrieve your serverâ€™s rated usage for a given period and enable or disable auto-renewals.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/phoenixnap-bare-metal-cloud-billing-models' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/billing/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billingapi

import (
	"encoding/json"
)

// LocationAvailabilityDetail Info about location, solutions and availability for a product.
type LocationAvailabilityDetail struct {
	Location LocationEnum `json:"location"`
	// Requested quantity.
	MinQuantityRequested float32 `json:"minQuantityRequested"`
	// Is product available in specific location for requested quantity
	MinQuantityAvailable bool `json:"minQuantityAvailable"`
	// Total available quantity of product in specific location. Max value is 10.
	AvailableQuantity float32 `json:"availableQuantity"`
	// Solutions supported in specific location for a product.
	Solutions []string `json:"solutions"`
}

// NewLocationAvailabilityDetail instantiates a new LocationAvailabilityDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationAvailabilityDetail(location LocationEnum, minQuantityRequested float32, minQuantityAvailable bool, availableQuantity float32, solutions []string) *LocationAvailabilityDetail {
	this := LocationAvailabilityDetail{}
	this.Location = location
	this.MinQuantityRequested = minQuantityRequested
	this.MinQuantityAvailable = minQuantityAvailable
	this.AvailableQuantity = availableQuantity
	this.Solutions = solutions
	return &this
}

// NewLocationAvailabilityDetailWithDefaults instantiates a new LocationAvailabilityDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationAvailabilityDetailWithDefaults() *LocationAvailabilityDetail {
	this := LocationAvailabilityDetail{}
	return &this
}

// GetLocation returns the Location field value
func (o *LocationAvailabilityDetail) GetLocation() LocationEnum {
	if o == nil {
		var ret LocationEnum
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *LocationAvailabilityDetail) GetLocationOk() (*LocationEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *LocationAvailabilityDetail) SetLocation(v LocationEnum) {
	o.Location = v
}

// GetMinQuantityRequested returns the MinQuantityRequested field value
func (o *LocationAvailabilityDetail) GetMinQuantityRequested() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MinQuantityRequested
}

// GetMinQuantityRequestedOk returns a tuple with the MinQuantityRequested field value
// and a boolean to check if the value has been set.
func (o *LocationAvailabilityDetail) GetMinQuantityRequestedOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinQuantityRequested, true
}

// SetMinQuantityRequested sets field value
func (o *LocationAvailabilityDetail) SetMinQuantityRequested(v float32) {
	o.MinQuantityRequested = v
}

// GetMinQuantityAvailable returns the MinQuantityAvailable field value
func (o *LocationAvailabilityDetail) GetMinQuantityAvailable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MinQuantityAvailable
}

// GetMinQuantityAvailableOk returns a tuple with the MinQuantityAvailable field value
// and a boolean to check if the value has been set.
func (o *LocationAvailabilityDetail) GetMinQuantityAvailableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinQuantityAvailable, true
}

// SetMinQuantityAvailable sets field value
func (o *LocationAvailabilityDetail) SetMinQuantityAvailable(v bool) {
	o.MinQuantityAvailable = v
}

// GetAvailableQuantity returns the AvailableQuantity field value
func (o *LocationAvailabilityDetail) GetAvailableQuantity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AvailableQuantity
}

// GetAvailableQuantityOk returns a tuple with the AvailableQuantity field value
// and a boolean to check if the value has been set.
func (o *LocationAvailabilityDetail) GetAvailableQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailableQuantity, true
}

// SetAvailableQuantity sets field value
func (o *LocationAvailabilityDetail) SetAvailableQuantity(v float32) {
	o.AvailableQuantity = v
}

// GetSolutions returns the Solutions field value
func (o *LocationAvailabilityDetail) GetSolutions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Solutions
}

// GetSolutionsOk returns a tuple with the Solutions field value
// and a boolean to check if the value has been set.
func (o *LocationAvailabilityDetail) GetSolutionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Solutions, true
}

// SetSolutions sets field value
func (o *LocationAvailabilityDetail) SetSolutions(v []string) {
	o.Solutions = v
}

func (o LocationAvailabilityDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["location"] = o.Location
	}
	if true {
		toSerialize["minQuantityRequested"] = o.MinQuantityRequested
	}
	if true {
		toSerialize["minQuantityAvailable"] = o.MinQuantityAvailable
	}
	if true {
		toSerialize["availableQuantity"] = o.AvailableQuantity
	}
	if true {
		toSerialize["solutions"] = o.Solutions
	}
	return json.Marshal(toSerialize)
}

type NullableLocationAvailabilityDetail struct {
	value *LocationAvailabilityDetail
	isSet bool
}

func (v NullableLocationAvailabilityDetail) Get() *LocationAvailabilityDetail {
	return v.value
}

func (v *NullableLocationAvailabilityDetail) Set(val *LocationAvailabilityDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationAvailabilityDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationAvailabilityDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationAvailabilityDetail(val *LocationAvailabilityDetail) *NullableLocationAvailabilityDetail {
	return &NullableLocationAvailabilityDetail{value: val, isSet: true}
}

func (v NullableLocationAvailabilityDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationAvailabilityDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
