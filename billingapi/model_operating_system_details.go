/*
Billing API

Automate your infrastructure billing with the Bare Metal Cloud Billing API. Reserve your server instances to ensure guaranteed resource availability for 12, 24, and 36 months. Retrieve your serverâ€™s rated usage for a given period and enable or disable auto-renewals.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/phoenixnap-bare-metal-cloud-billing-models' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/billing/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billingapi

import (
	"encoding/json"
)

// OperatingSystemDetails Details of the operating system associated with this rated usage record.
type OperatingSystemDetails struct {
	// Number of cores.
	Cores int32 `json:"cores"`
	// Correlation is used to associate Operating System License charges and the Server on which it was installed. In this scenario, the correlation ID will be equal to the rated usage record ID representing the charge for the Server.
	CorrelationId string `json:"correlationId"`
}

// NewOperatingSystemDetails instantiates a new OperatingSystemDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperatingSystemDetails(cores int32, correlationId string) *OperatingSystemDetails {
	this := OperatingSystemDetails{}
	this.Cores = cores
	this.CorrelationId = correlationId
	return &this
}

// NewOperatingSystemDetailsWithDefaults instantiates a new OperatingSystemDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperatingSystemDetailsWithDefaults() *OperatingSystemDetails {
	this := OperatingSystemDetails{}
	return &this
}

// GetCores returns the Cores field value
func (o *OperatingSystemDetails) GetCores() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cores
}

// GetCoresOk returns a tuple with the Cores field value
// and a boolean to check if the value has been set.
func (o *OperatingSystemDetails) GetCoresOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cores, true
}

// SetCores sets field value
func (o *OperatingSystemDetails) SetCores(v int32) {
	o.Cores = v
}

// GetCorrelationId returns the CorrelationId field value
func (o *OperatingSystemDetails) GetCorrelationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value
// and a boolean to check if the value has been set.
func (o *OperatingSystemDetails) GetCorrelationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CorrelationId, true
}

// SetCorrelationId sets field value
func (o *OperatingSystemDetails) SetCorrelationId(v string) {
	o.CorrelationId = v
}

func (o OperatingSystemDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cores"] = o.Cores
	}
	if true {
		toSerialize["correlationId"] = o.CorrelationId
	}
	return json.Marshal(toSerialize)
}

type NullableOperatingSystemDetails struct {
	value *OperatingSystemDetails
	isSet bool
}

func (v NullableOperatingSystemDetails) Get() *OperatingSystemDetails {
	return v.value
}

func (v *NullableOperatingSystemDetails) Set(val *OperatingSystemDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableOperatingSystemDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableOperatingSystemDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperatingSystemDetails(val *OperatingSystemDetails) *NullableOperatingSystemDetails {
	return &NullableOperatingSystemDetails{value: val, isSet: true}
}

func (v NullableOperatingSystemDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperatingSystemDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
