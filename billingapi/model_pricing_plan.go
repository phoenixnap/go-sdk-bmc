/*
Billing API

Automate your infrastructure billing with the Bare Metal Cloud Billing API. Reserve your server instances to ensure guaranteed resource availability for 12, 24, and 36 months. Retrieve your serverâ€™s rated usage for a given period and enable or disable auto-renewals.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/phoenixnap-bare-metal-cloud-billing-models' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/billing/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billingapi

import (
	"encoding/json"
)

// PricingPlan Pricing plan details.
type PricingPlan struct {
	// The SKU identifying this pricing plan.
	Sku string `json:"sku"`
	// Description of this pricing plan.
	SkuDescription *string `json:"skuDescription,omitempty"`
	// The code identifying the location.
	Location string `json:"location"`
	// The pricing model.
	PricingModel string `json:"pricingModel"`
	// The price per unit.
	Price     float32       `json:"price"`
	PriceUnit PriceUnitEnum `json:"priceUnit"`
	// Product code of the product this product is correlated with
	CorrelatedProductCode *string `json:"correlatedProductCode,omitempty"`
	// Package size per month.
	PackageQuantity *float32 `json:"packageQuantity,omitempty"`
	// Package size unit.
	PackageUnit *string `json:"packageUnit,omitempty"`
}

// NewPricingPlan instantiates a new PricingPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPricingPlan(sku string, location string, pricingModel string, price float32, priceUnit PriceUnitEnum) *PricingPlan {
	this := PricingPlan{}
	this.Sku = sku
	this.Location = location
	this.PricingModel = pricingModel
	this.Price = price
	this.PriceUnit = priceUnit
	return &this
}

// NewPricingPlanWithDefaults instantiates a new PricingPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPricingPlanWithDefaults() *PricingPlan {
	this := PricingPlan{}
	return &this
}

// GetSku returns the Sku field value
func (o *PricingPlan) GetSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *PricingPlan) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *PricingPlan) SetSku(v string) {
	o.Sku = v
}

// GetSkuDescription returns the SkuDescription field value if set, zero value otherwise.
func (o *PricingPlan) GetSkuDescription() string {
	if o == nil || o.SkuDescription == nil {
		var ret string
		return ret
	}
	return *o.SkuDescription
}

// GetSkuDescriptionOk returns a tuple with the SkuDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricingPlan) GetSkuDescriptionOk() (*string, bool) {
	if o == nil || o.SkuDescription == nil {
		return nil, false
	}
	return o.SkuDescription, true
}

// HasSkuDescription returns a boolean if a field has been set.
func (o *PricingPlan) HasSkuDescription() bool {
	if o != nil && o.SkuDescription != nil {
		return true
	}

	return false
}

// SetSkuDescription gets a reference to the given string and assigns it to the SkuDescription field.
func (o *PricingPlan) SetSkuDescription(v string) {
	o.SkuDescription = &v
}

// GetLocation returns the Location field value
func (o *PricingPlan) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *PricingPlan) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *PricingPlan) SetLocation(v string) {
	o.Location = v
}

// GetPricingModel returns the PricingModel field value
func (o *PricingPlan) GetPricingModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PricingModel
}

// GetPricingModelOk returns a tuple with the PricingModel field value
// and a boolean to check if the value has been set.
func (o *PricingPlan) GetPricingModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PricingModel, true
}

// SetPricingModel sets field value
func (o *PricingPlan) SetPricingModel(v string) {
	o.PricingModel = v
}

// GetPrice returns the Price field value
func (o *PricingPlan) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *PricingPlan) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *PricingPlan) SetPrice(v float32) {
	o.Price = v
}

// GetPriceUnit returns the PriceUnit field value
func (o *PricingPlan) GetPriceUnit() PriceUnitEnum {
	if o == nil {
		var ret PriceUnitEnum
		return ret
	}

	return o.PriceUnit
}

// GetPriceUnitOk returns a tuple with the PriceUnit field value
// and a boolean to check if the value has been set.
func (o *PricingPlan) GetPriceUnitOk() (*PriceUnitEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceUnit, true
}

// SetPriceUnit sets field value
func (o *PricingPlan) SetPriceUnit(v PriceUnitEnum) {
	o.PriceUnit = v
}

// GetCorrelatedProductCode returns the CorrelatedProductCode field value if set, zero value otherwise.
func (o *PricingPlan) GetCorrelatedProductCode() string {
	if o == nil || o.CorrelatedProductCode == nil {
		var ret string
		return ret
	}
	return *o.CorrelatedProductCode
}

// GetCorrelatedProductCodeOk returns a tuple with the CorrelatedProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricingPlan) GetCorrelatedProductCodeOk() (*string, bool) {
	if o == nil || o.CorrelatedProductCode == nil {
		return nil, false
	}
	return o.CorrelatedProductCode, true
}

// HasCorrelatedProductCode returns a boolean if a field has been set.
func (o *PricingPlan) HasCorrelatedProductCode() bool {
	if o != nil && o.CorrelatedProductCode != nil {
		return true
	}

	return false
}

// SetCorrelatedProductCode gets a reference to the given string and assigns it to the CorrelatedProductCode field.
func (o *PricingPlan) SetCorrelatedProductCode(v string) {
	o.CorrelatedProductCode = &v
}

// GetPackageQuantity returns the PackageQuantity field value if set, zero value otherwise.
func (o *PricingPlan) GetPackageQuantity() float32 {
	if o == nil || o.PackageQuantity == nil {
		var ret float32
		return ret
	}
	return *o.PackageQuantity
}

// GetPackageQuantityOk returns a tuple with the PackageQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricingPlan) GetPackageQuantityOk() (*float32, bool) {
	if o == nil || o.PackageQuantity == nil {
		return nil, false
	}
	return o.PackageQuantity, true
}

// HasPackageQuantity returns a boolean if a field has been set.
func (o *PricingPlan) HasPackageQuantity() bool {
	if o != nil && o.PackageQuantity != nil {
		return true
	}

	return false
}

// SetPackageQuantity gets a reference to the given float32 and assigns it to the PackageQuantity field.
func (o *PricingPlan) SetPackageQuantity(v float32) {
	o.PackageQuantity = &v
}

// GetPackageUnit returns the PackageUnit field value if set, zero value otherwise.
func (o *PricingPlan) GetPackageUnit() string {
	if o == nil || o.PackageUnit == nil {
		var ret string
		return ret
	}
	return *o.PackageUnit
}

// GetPackageUnitOk returns a tuple with the PackageUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricingPlan) GetPackageUnitOk() (*string, bool) {
	if o == nil || o.PackageUnit == nil {
		return nil, false
	}
	return o.PackageUnit, true
}

// HasPackageUnit returns a boolean if a field has been set.
func (o *PricingPlan) HasPackageUnit() bool {
	if o != nil && o.PackageUnit != nil {
		return true
	}

	return false
}

// SetPackageUnit gets a reference to the given string and assigns it to the PackageUnit field.
func (o *PricingPlan) SetPackageUnit(v string) {
	o.PackageUnit = &v
}

func (o PricingPlan) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sku"] = o.Sku
	}
	if o.SkuDescription != nil {
		toSerialize["skuDescription"] = o.SkuDescription
	}
	if true {
		toSerialize["location"] = o.Location
	}
	if true {
		toSerialize["pricingModel"] = o.PricingModel
	}
	if true {
		toSerialize["price"] = o.Price
	}
	if true {
		toSerialize["priceUnit"] = o.PriceUnit
	}
	if o.CorrelatedProductCode != nil {
		toSerialize["correlatedProductCode"] = o.CorrelatedProductCode
	}
	if o.PackageQuantity != nil {
		toSerialize["packageQuantity"] = o.PackageQuantity
	}
	if o.PackageUnit != nil {
		toSerialize["packageUnit"] = o.PackageUnit
	}
	return json.Marshal(toSerialize)
}

type NullablePricingPlan struct {
	value *PricingPlan
	isSet bool
}

func (v NullablePricingPlan) Get() *PricingPlan {
	return v.value
}

func (v *NullablePricingPlan) Set(val *PricingPlan) {
	v.value = val
	v.isSet = true
}

func (v NullablePricingPlan) IsSet() bool {
	return v.isSet
}

func (v *NullablePricingPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePricingPlan(val *PricingPlan) *NullablePricingPlan {
	return &NullablePricingPlan{value: val, isSet: true}
}

func (v NullablePricingPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePricingPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
