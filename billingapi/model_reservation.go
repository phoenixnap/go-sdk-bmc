/*
Billing API

Automate your infrastructure billing with the Bare Metal Cloud Billing API. Reserve your server instances to ensure guaranteed resource availability for 12, 24, and 36 months. Retrieve your serverâ€™s rated usage for a given period and enable or disable auto-renewals.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/phoenixnap-bare-metal-cloud-billing-models' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/billing/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billingapi

import (
	"encoding/json"
	"time"
)

// Reservation Reservation details
type Reservation struct {
	// The reservation identifier.
	Id string `json:"id"`
	// The code identifying the product. This code has significant across all locations.
	ProductCode string `json:"productCode"`
	// The product category.
	ProductCategory     string                         `json:"productCategory"`
	Location            LocationEnum                   `json:"location"`
	ReservationModel    ReservationModelEnum           `json:"reservationModel"`
	InitialInvoiceModel *ReservationInvoicingModelEnum `json:"initialInvoiceModel,omitempty"`
	// The point in time (in UTC) when the reservation starts.
	StartDateTime time.Time `json:"startDateTime"`
	// The point in time (in UTC) when the reservation end.
	EndDateTime *time.Time `json:"endDateTime,omitempty"`
	// The point in time (in UTC) when the reservation was renewed last.
	LastRenewalDateTime *time.Time `json:"lastRenewalDateTime,omitempty"`
	// The point in time (in UTC) when the reservation will be renewed if auto renew is set to true.
	NextRenewalDateTime *time.Time `json:"nextRenewalDateTime,omitempty"`
	// A flag indicating whether the reservation will auto-renew (default is true).
	AutoRenew bool `json:"autoRenew"`
	// The sku that will be applied to this reservation. It is useful to find out the price by querying the /product endpoint.
	Sku string `json:"sku"`
	// Reservation price.
	Price     float32       `json:"price"`
	PriceUnit PriceUnitEnum `json:"priceUnit"`
	// The resource ID currently being assigned to Reservation.
	AssignedResourceId *string `json:"assignedResourceId,omitempty"`
	// Next billing date for Reservation.
	NextBillingDate *string `json:"nextBillingDate,omitempty"`
}

// NewReservation instantiates a new Reservation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservation(id string, productCode string, productCategory string, location LocationEnum, reservationModel ReservationModelEnum, startDateTime time.Time, autoRenew bool, sku string, price float32, priceUnit PriceUnitEnum) *Reservation {
	this := Reservation{}
	this.Id = id
	this.ProductCode = productCode
	this.ProductCategory = productCategory
	this.Location = location
	this.ReservationModel = reservationModel
	this.StartDateTime = startDateTime
	this.AutoRenew = autoRenew
	this.Sku = sku
	this.Price = price
	this.PriceUnit = priceUnit
	return &this
}

// NewReservationWithDefaults instantiates a new Reservation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationWithDefaults() *Reservation {
	this := Reservation{}
	return &this
}

// GetId returns the Id field value
func (o *Reservation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Reservation) SetId(v string) {
	o.Id = v
}

// GetProductCode returns the ProductCode field value
func (o *Reservation) GetProductCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetProductCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductCode, true
}

// SetProductCode sets field value
func (o *Reservation) SetProductCode(v string) {
	o.ProductCode = v
}

// GetProductCategory returns the ProductCategory field value
func (o *Reservation) GetProductCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductCategory
}

// GetProductCategoryOk returns a tuple with the ProductCategory field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetProductCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductCategory, true
}

// SetProductCategory sets field value
func (o *Reservation) SetProductCategory(v string) {
	o.ProductCategory = v
}

// GetLocation returns the Location field value
func (o *Reservation) GetLocation() LocationEnum {
	if o == nil {
		var ret LocationEnum
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetLocationOk() (*LocationEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *Reservation) SetLocation(v LocationEnum) {
	o.Location = v
}

// GetReservationModel returns the ReservationModel field value
func (o *Reservation) GetReservationModel() ReservationModelEnum {
	if o == nil {
		var ret ReservationModelEnum
		return ret
	}

	return o.ReservationModel
}

// GetReservationModelOk returns a tuple with the ReservationModel field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetReservationModelOk() (*ReservationModelEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReservationModel, true
}

// SetReservationModel sets field value
func (o *Reservation) SetReservationModel(v ReservationModelEnum) {
	o.ReservationModel = v
}

// GetInitialInvoiceModel returns the InitialInvoiceModel field value if set, zero value otherwise.
func (o *Reservation) GetInitialInvoiceModel() ReservationInvoicingModelEnum {
	if o == nil || o.InitialInvoiceModel == nil {
		var ret ReservationInvoicingModelEnum
		return ret
	}
	return *o.InitialInvoiceModel
}

// GetInitialInvoiceModelOk returns a tuple with the InitialInvoiceModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Reservation) GetInitialInvoiceModelOk() (*ReservationInvoicingModelEnum, bool) {
	if o == nil || o.InitialInvoiceModel == nil {
		return nil, false
	}
	return o.InitialInvoiceModel, true
}

// HasInitialInvoiceModel returns a boolean if a field has been set.
func (o *Reservation) HasInitialInvoiceModel() bool {
	if o != nil && o.InitialInvoiceModel != nil {
		return true
	}

	return false
}

// SetInitialInvoiceModel gets a reference to the given ReservationInvoicingModelEnum and assigns it to the InitialInvoiceModel field.
func (o *Reservation) SetInitialInvoiceModel(v ReservationInvoicingModelEnum) {
	o.InitialInvoiceModel = &v
}

// GetStartDateTime returns the StartDateTime field value
func (o *Reservation) GetStartDateTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDateTime, true
}

// SetStartDateTime sets field value
func (o *Reservation) SetStartDateTime(v time.Time) {
	o.StartDateTime = v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise.
func (o *Reservation) GetEndDateTime() time.Time {
	if o == nil || o.EndDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDateTime
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Reservation) GetEndDateTimeOk() (*time.Time, bool) {
	if o == nil || o.EndDateTime == nil {
		return nil, false
	}
	return o.EndDateTime, true
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *Reservation) HasEndDateTime() bool {
	if o != nil && o.EndDateTime != nil {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given time.Time and assigns it to the EndDateTime field.
func (o *Reservation) SetEndDateTime(v time.Time) {
	o.EndDateTime = &v
}

// GetLastRenewalDateTime returns the LastRenewalDateTime field value if set, zero value otherwise.
func (o *Reservation) GetLastRenewalDateTime() time.Time {
	if o == nil || o.LastRenewalDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastRenewalDateTime
}

// GetLastRenewalDateTimeOk returns a tuple with the LastRenewalDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Reservation) GetLastRenewalDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastRenewalDateTime == nil {
		return nil, false
	}
	return o.LastRenewalDateTime, true
}

// HasLastRenewalDateTime returns a boolean if a field has been set.
func (o *Reservation) HasLastRenewalDateTime() bool {
	if o != nil && o.LastRenewalDateTime != nil {
		return true
	}

	return false
}

// SetLastRenewalDateTime gets a reference to the given time.Time and assigns it to the LastRenewalDateTime field.
func (o *Reservation) SetLastRenewalDateTime(v time.Time) {
	o.LastRenewalDateTime = &v
}

// GetNextRenewalDateTime returns the NextRenewalDateTime field value if set, zero value otherwise.
func (o *Reservation) GetNextRenewalDateTime() time.Time {
	if o == nil || o.NextRenewalDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.NextRenewalDateTime
}

// GetNextRenewalDateTimeOk returns a tuple with the NextRenewalDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Reservation) GetNextRenewalDateTimeOk() (*time.Time, bool) {
	if o == nil || o.NextRenewalDateTime == nil {
		return nil, false
	}
	return o.NextRenewalDateTime, true
}

// HasNextRenewalDateTime returns a boolean if a field has been set.
func (o *Reservation) HasNextRenewalDateTime() bool {
	if o != nil && o.NextRenewalDateTime != nil {
		return true
	}

	return false
}

// SetNextRenewalDateTime gets a reference to the given time.Time and assigns it to the NextRenewalDateTime field.
func (o *Reservation) SetNextRenewalDateTime(v time.Time) {
	o.NextRenewalDateTime = &v
}

// GetAutoRenew returns the AutoRenew field value
func (o *Reservation) GetAutoRenew() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoRenew
}

// GetAutoRenewOk returns a tuple with the AutoRenew field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetAutoRenewOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoRenew, true
}

// SetAutoRenew sets field value
func (o *Reservation) SetAutoRenew(v bool) {
	o.AutoRenew = v
}

// GetSku returns the Sku field value
func (o *Reservation) GetSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *Reservation) SetSku(v string) {
	o.Sku = v
}

// GetPrice returns the Price field value
func (o *Reservation) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *Reservation) SetPrice(v float32) {
	o.Price = v
}

// GetPriceUnit returns the PriceUnit field value
func (o *Reservation) GetPriceUnit() PriceUnitEnum {
	if o == nil {
		var ret PriceUnitEnum
		return ret
	}

	return o.PriceUnit
}

// GetPriceUnitOk returns a tuple with the PriceUnit field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetPriceUnitOk() (*PriceUnitEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceUnit, true
}

// SetPriceUnit sets field value
func (o *Reservation) SetPriceUnit(v PriceUnitEnum) {
	o.PriceUnit = v
}

// GetAssignedResourceId returns the AssignedResourceId field value if set, zero value otherwise.
func (o *Reservation) GetAssignedResourceId() string {
	if o == nil || o.AssignedResourceId == nil {
		var ret string
		return ret
	}
	return *o.AssignedResourceId
}

// GetAssignedResourceIdOk returns a tuple with the AssignedResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Reservation) GetAssignedResourceIdOk() (*string, bool) {
	if o == nil || o.AssignedResourceId == nil {
		return nil, false
	}
	return o.AssignedResourceId, true
}

// HasAssignedResourceId returns a boolean if a field has been set.
func (o *Reservation) HasAssignedResourceId() bool {
	if o != nil && o.AssignedResourceId != nil {
		return true
	}

	return false
}

// SetAssignedResourceId gets a reference to the given string and assigns it to the AssignedResourceId field.
func (o *Reservation) SetAssignedResourceId(v string) {
	o.AssignedResourceId = &v
}

// GetNextBillingDate returns the NextBillingDate field value if set, zero value otherwise.
func (o *Reservation) GetNextBillingDate() string {
	if o == nil || o.NextBillingDate == nil {
		var ret string
		return ret
	}
	return *o.NextBillingDate
}

// GetNextBillingDateOk returns a tuple with the NextBillingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Reservation) GetNextBillingDateOk() (*string, bool) {
	if o == nil || o.NextBillingDate == nil {
		return nil, false
	}
	return o.NextBillingDate, true
}

// HasNextBillingDate returns a boolean if a field has been set.
func (o *Reservation) HasNextBillingDate() bool {
	if o != nil && o.NextBillingDate != nil {
		return true
	}

	return false
}

// SetNextBillingDate gets a reference to the given string and assigns it to the NextBillingDate field.
func (o *Reservation) SetNextBillingDate(v string) {
	o.NextBillingDate = &v
}

func (o Reservation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["productCode"] = o.ProductCode
	}
	if true {
		toSerialize["productCategory"] = o.ProductCategory
	}
	if true {
		toSerialize["location"] = o.Location
	}
	if true {
		toSerialize["reservationModel"] = o.ReservationModel
	}
	if o.InitialInvoiceModel != nil {
		toSerialize["initialInvoiceModel"] = o.InitialInvoiceModel
	}
	if true {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	if o.EndDateTime != nil {
		toSerialize["endDateTime"] = o.EndDateTime
	}
	if o.LastRenewalDateTime != nil {
		toSerialize["lastRenewalDateTime"] = o.LastRenewalDateTime
	}
	if o.NextRenewalDateTime != nil {
		toSerialize["nextRenewalDateTime"] = o.NextRenewalDateTime
	}
	if true {
		toSerialize["autoRenew"] = o.AutoRenew
	}
	if true {
		toSerialize["sku"] = o.Sku
	}
	if true {
		toSerialize["price"] = o.Price
	}
	if true {
		toSerialize["priceUnit"] = o.PriceUnit
	}
	if o.AssignedResourceId != nil {
		toSerialize["assignedResourceId"] = o.AssignedResourceId
	}
	if o.NextBillingDate != nil {
		toSerialize["nextBillingDate"] = o.NextBillingDate
	}
	return json.Marshal(toSerialize)
}

type NullableReservation struct {
	value *Reservation
	isSet bool
}

func (v NullableReservation) Get() *Reservation {
	return v.value
}

func (v *NullableReservation) Set(val *Reservation) {
	v.value = val
	v.isSet = true
}

func (v NullableReservation) IsSet() bool {
	return v.isSet
}

func (v *NullableReservation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservation(val *Reservation) *NullableReservation {
	return &NullableReservation{value: val, isSet: true}
}

func (v NullableReservation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
