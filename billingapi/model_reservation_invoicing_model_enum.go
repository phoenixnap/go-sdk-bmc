/*
Billing API

Automate your infrastructure billing with the Bare Metal Cloud Billing API. Reserve your server instances to ensure guaranteed resource availability for 12, 24, and 36 months. Retrieve your serverâ€™s rated usage for a given period and enable or disable auto-renewals.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/phoenixnap-bare-metal-cloud-billing-models' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/billing/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billingapi

import (
	"encoding/json"
	"fmt"
)

// ReservationInvoicingModelEnum Reservations created with initial invoice model ON_CREATION will be invoiced on same date when reservation is created. Reservation created with CALENDAR_MONTH initial invoice model will be invoiced at the beginning of next month.
type ReservationInvoicingModelEnum string

// List of ReservationInvoicingModelEnum
const (
	ON_CREATION    ReservationInvoicingModelEnum = "ON_CREATION"
	CALENDAR_MONTH ReservationInvoicingModelEnum = "CALENDAR_MONTH"
)

// All allowed values of ReservationInvoicingModelEnum enum
var AllowedReservationInvoicingModelEnumEnumValues = []ReservationInvoicingModelEnum{
	"ON_CREATION",
	"CALENDAR_MONTH",
}

func (v *ReservationInvoicingModelEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ReservationInvoicingModelEnum(value)
	for _, existing := range AllowedReservationInvoicingModelEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ReservationInvoicingModelEnum", value)
}

// NewReservationInvoicingModelEnumFromValue returns a pointer to a valid ReservationInvoicingModelEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewReservationInvoicingModelEnumFromValue(v string) (*ReservationInvoicingModelEnum, error) {
	ev := ReservationInvoicingModelEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ReservationInvoicingModelEnum: valid values are %v", v, AllowedReservationInvoicingModelEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ReservationInvoicingModelEnum) IsValid() bool {
	for _, existing := range AllowedReservationInvoicingModelEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ReservationInvoicingModelEnum value
func (v ReservationInvoicingModelEnum) Ptr() *ReservationInvoicingModelEnum {
	return &v
}

type NullableReservationInvoicingModelEnum struct {
	value *ReservationInvoicingModelEnum
	isSet bool
}

func (v NullableReservationInvoicingModelEnum) Get() *ReservationInvoicingModelEnum {
	return v.value
}

func (v *NullableReservationInvoicingModelEnum) Set(val *ReservationInvoicingModelEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationInvoicingModelEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationInvoicingModelEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationInvoicingModelEnum(val *ReservationInvoicingModelEnum) *NullableReservationInvoicingModelEnum {
	return &NullableReservationInvoicingModelEnum{value: val, isSet: true}
}

func (v NullableReservationInvoicingModelEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationInvoicingModelEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
