/*
Billing API

Automate your infrastructure billing with the Bare Metal Cloud Billing API. Reserve your server instances to ensure guaranteed resource availability for 12, 24, and 36 months. Retrieve your serverâ€™s rated usage for a given period and enable or disable auto-renewals.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/phoenixnap-bare-metal-cloud-billing-models' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/billing/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billingapi

import (
	"encoding/json"
	"fmt"
)

// checks if the ReservationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationRequest{}

// ReservationRequest Reservation request.
type ReservationRequest struct {
	// The sku code of product pricing plan.
	Sku                  string `json:"sku"`
	AdditionalProperties map[string]interface{}
}

type _ReservationRequest ReservationRequest

// NewReservationRequest instantiates a new ReservationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationRequest(sku string) *ReservationRequest {
	this := ReservationRequest{}
	this.Sku = sku
	return &this
}

// NewReservationRequestWithDefaults instantiates a new ReservationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationRequestWithDefaults() *ReservationRequest {
	this := ReservationRequest{}
	return &this
}

// GetSku returns the Sku field value
func (o *ReservationRequest) GetSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *ReservationRequest) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *ReservationRequest) SetSku(v string) {
	o.Sku = v
}

func (o ReservationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sku"] = o.Sku

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ReservationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sku",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReservationRequest := _ReservationRequest{}

	err = json.Unmarshal(data, &varReservationRequest)

	if err != nil {
		return err
	}

	*o = ReservationRequest(varReservationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "sku")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableReservationRequest struct {
	value *ReservationRequest
	isSet bool
}

func (v NullableReservationRequest) Get() *ReservationRequest {
	return v.value
}

func (v *NullableReservationRequest) Set(val *ReservationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationRequest(val *ReservationRequest) *NullableReservationRequest {
	return &NullableReservationRequest{value: val, isSet: true}
}

func (v NullableReservationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
