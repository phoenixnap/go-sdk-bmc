/*
Billing API

Automate your infrastructure billing with the Bare Metal Cloud Billing API. Reserve your server instances to ensure guaranteed resource availability for 12, 24, and 36 months. Retrieve your serverâ€™s rated usage for a given period and enable or disable auto-renewals.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/phoenixnap-bare-metal-cloud-billing-models' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/billing/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billingapi

import (
	"encoding/json"
)

// ServerDetails Details of the server associated with this rated usage record.
type ServerDetails struct {
	// The server identifier as returned by the BMC API.
	Id string `json:"id"`
	// The server hostname.
	Hostname string `json:"hostname"`
}

// NewServerDetails instantiates a new ServerDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerDetails(id string, hostname string) *ServerDetails {
	this := ServerDetails{}
	this.Id = id
	this.Hostname = hostname
	return &this
}

// NewServerDetailsWithDefaults instantiates a new ServerDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerDetailsWithDefaults() *ServerDetails {
	this := ServerDetails{}
	return &this
}

// GetId returns the Id field value
func (o *ServerDetails) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ServerDetails) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ServerDetails) SetId(v string) {
	o.Id = v
}

// GetHostname returns the Hostname field value
func (o *ServerDetails) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *ServerDetails) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *ServerDetails) SetHostname(v string) {
	o.Hostname = v
}

func (o ServerDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["hostname"] = o.Hostname
	}
	return json.Marshal(toSerialize)
}

type NullableServerDetails struct {
	value *ServerDetails
	isSet bool
}

func (v NullableServerDetails) Get() *ServerDetails {
	return v.value
}

func (v *NullableServerDetails) Set(val *ServerDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableServerDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableServerDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerDetails(val *ServerDetails) *NullableServerDetails {
	return &NullableServerDetails{value: val, isSet: true}
}

func (v NullableServerDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
