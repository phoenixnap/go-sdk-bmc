/*
Billing API

Automate your infrastructure billing with the Bare Metal Cloud Billing API. Reserve your server instances to ensure guaranteed resource availability for 12, 24, and 36 months. Retrieve your serverâ€™s rated usage for a given period and enable or disable auto-renewals.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/phoenixnap-bare-metal-cloud-billing-models' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/billing/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billingapi

import (
	"encoding/json"
)

// ServerProductMetadata Details of the server product.
type ServerProductMetadata struct {
	// RAM in GB.
	RamInGb float32 `json:"ramInGb"`
	// CPU name.
	Cpu string `json:"cpu"`
	// Number of CPUs.
	CpuCount float32 `json:"cpuCount"`
	// The number of physical cores present on each CPU.
	CoresPerCpu float32 `json:"coresPerCpu"`
	// CPU frequency in GHz.
	CpuFrequency float32 `json:"cpuFrequency"`
	// Server network.
	Network string `json:"network"`
	// Server storage.
	Storage string `json:"storage"`
}

// NewServerProductMetadata instantiates a new ServerProductMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerProductMetadata(ramInGb float32, cpu string, cpuCount float32, coresPerCpu float32, cpuFrequency float32, network string, storage string) *ServerProductMetadata {
	this := ServerProductMetadata{}
	this.RamInGb = ramInGb
	this.Cpu = cpu
	this.CpuCount = cpuCount
	this.CoresPerCpu = coresPerCpu
	this.CpuFrequency = cpuFrequency
	this.Network = network
	this.Storage = storage
	return &this
}

// NewServerProductMetadataWithDefaults instantiates a new ServerProductMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerProductMetadataWithDefaults() *ServerProductMetadata {
	this := ServerProductMetadata{}
	return &this
}

// GetRamInGb returns the RamInGb field value
func (o *ServerProductMetadata) GetRamInGb() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RamInGb
}

// GetRamInGbOk returns a tuple with the RamInGb field value
// and a boolean to check if the value has been set.
func (o *ServerProductMetadata) GetRamInGbOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RamInGb, true
}

// SetRamInGb sets field value
func (o *ServerProductMetadata) SetRamInGb(v float32) {
	o.RamInGb = v
}

// GetCpu returns the Cpu field value
func (o *ServerProductMetadata) GetCpu() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *ServerProductMetadata) GetCpuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *ServerProductMetadata) SetCpu(v string) {
	o.Cpu = v
}

// GetCpuCount returns the CpuCount field value
func (o *ServerProductMetadata) GetCpuCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CpuCount
}

// GetCpuCountOk returns a tuple with the CpuCount field value
// and a boolean to check if the value has been set.
func (o *ServerProductMetadata) GetCpuCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CpuCount, true
}

// SetCpuCount sets field value
func (o *ServerProductMetadata) SetCpuCount(v float32) {
	o.CpuCount = v
}

// GetCoresPerCpu returns the CoresPerCpu field value
func (o *ServerProductMetadata) GetCoresPerCpu() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CoresPerCpu
}

// GetCoresPerCpuOk returns a tuple with the CoresPerCpu field value
// and a boolean to check if the value has been set.
func (o *ServerProductMetadata) GetCoresPerCpuOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CoresPerCpu, true
}

// SetCoresPerCpu sets field value
func (o *ServerProductMetadata) SetCoresPerCpu(v float32) {
	o.CoresPerCpu = v
}

// GetCpuFrequency returns the CpuFrequency field value
func (o *ServerProductMetadata) GetCpuFrequency() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CpuFrequency
}

// GetCpuFrequencyOk returns a tuple with the CpuFrequency field value
// and a boolean to check if the value has been set.
func (o *ServerProductMetadata) GetCpuFrequencyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CpuFrequency, true
}

// SetCpuFrequency sets field value
func (o *ServerProductMetadata) SetCpuFrequency(v float32) {
	o.CpuFrequency = v
}

// GetNetwork returns the Network field value
func (o *ServerProductMetadata) GetNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *ServerProductMetadata) GetNetworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *ServerProductMetadata) SetNetwork(v string) {
	o.Network = v
}

// GetStorage returns the Storage field value
func (o *ServerProductMetadata) GetStorage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *ServerProductMetadata) GetStorageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Storage, true
}

// SetStorage sets field value
func (o *ServerProductMetadata) SetStorage(v string) {
	o.Storage = v
}

func (o ServerProductMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ramInGb"] = o.RamInGb
	}
	if true {
		toSerialize["cpu"] = o.Cpu
	}
	if true {
		toSerialize["cpuCount"] = o.CpuCount
	}
	if true {
		toSerialize["coresPerCpu"] = o.CoresPerCpu
	}
	if true {
		toSerialize["cpuFrequency"] = o.CpuFrequency
	}
	if true {
		toSerialize["network"] = o.Network
	}
	if true {
		toSerialize["storage"] = o.Storage
	}
	return json.Marshal(toSerialize)
}

type NullableServerProductMetadata struct {
	value *ServerProductMetadata
	isSet bool
}

func (v NullableServerProductMetadata) Get() *ServerProductMetadata {
	return v.value
}

func (v *NullableServerProductMetadata) Set(val *ServerProductMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableServerProductMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableServerProductMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerProductMetadata(val *ServerProductMetadata) *NullableServerProductMetadata {
	return &NullableServerProductMetadata{value: val, isSet: true}
}

func (v NullableServerProductMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerProductMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
