/*
Billing API

Automate your infrastructure billing with the Bare Metal Cloud Billing API. Reserve your server instances to ensure guaranteed resource availability for 12, 24, and 36 months. Retrieve your serverâ€™s rated usage for a given period and enable or disable auto-renewals.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/phoenixnap-bare-metal-cloud-billing-models' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/billing/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package billingapi

import (
	"encoding/json"
	"time"
)

// StorageDetails Details of the storage associated with this rated usage record.
type StorageDetails struct {
	// Network storage ID.
	NetworkStorageId string `json:"networkStorageId"`
	// Network storage name.
	NetworkStorageName string `json:"networkStorageName"`
	// Volume ID.
	VolumeId string `json:"volumeId"`
	// Volume name.
	VolumeName string `json:"volumeName"`
	// Capacity in GB.
	CapacityInGb int64 `json:"capacityInGb"`
	// Timestamp when the record was created.
	CreatedOn time.Time `json:"createdOn"`
}

// NewStorageDetails instantiates a new StorageDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageDetails(networkStorageId string, networkStorageName string, volumeId string, volumeName string, capacityInGb int64, createdOn time.Time) *StorageDetails {
	this := StorageDetails{}
	this.NetworkStorageId = networkStorageId
	this.NetworkStorageName = networkStorageName
	this.VolumeId = volumeId
	this.VolumeName = volumeName
	this.CapacityInGb = capacityInGb
	this.CreatedOn = createdOn
	return &this
}

// NewStorageDetailsWithDefaults instantiates a new StorageDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageDetailsWithDefaults() *StorageDetails {
	this := StorageDetails{}
	return &this
}

// GetNetworkStorageId returns the NetworkStorageId field value
func (o *StorageDetails) GetNetworkStorageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkStorageId
}

// GetNetworkStorageIdOk returns a tuple with the NetworkStorageId field value
// and a boolean to check if the value has been set.
func (o *StorageDetails) GetNetworkStorageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkStorageId, true
}

// SetNetworkStorageId sets field value
func (o *StorageDetails) SetNetworkStorageId(v string) {
	o.NetworkStorageId = v
}

// GetNetworkStorageName returns the NetworkStorageName field value
func (o *StorageDetails) GetNetworkStorageName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkStorageName
}

// GetNetworkStorageNameOk returns a tuple with the NetworkStorageName field value
// and a boolean to check if the value has been set.
func (o *StorageDetails) GetNetworkStorageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkStorageName, true
}

// SetNetworkStorageName sets field value
func (o *StorageDetails) SetNetworkStorageName(v string) {
	o.NetworkStorageName = v
}

// GetVolumeId returns the VolumeId field value
func (o *StorageDetails) GetVolumeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value
// and a boolean to check if the value has been set.
func (o *StorageDetails) GetVolumeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeId, true
}

// SetVolumeId sets field value
func (o *StorageDetails) SetVolumeId(v string) {
	o.VolumeId = v
}

// GetVolumeName returns the VolumeName field value
func (o *StorageDetails) GetVolumeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VolumeName
}

// GetVolumeNameOk returns a tuple with the VolumeName field value
// and a boolean to check if the value has been set.
func (o *StorageDetails) GetVolumeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VolumeName, true
}

// SetVolumeName sets field value
func (o *StorageDetails) SetVolumeName(v string) {
	o.VolumeName = v
}

// GetCapacityInGb returns the CapacityInGb field value
func (o *StorageDetails) GetCapacityInGb() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CapacityInGb
}

// GetCapacityInGbOk returns a tuple with the CapacityInGb field value
// and a boolean to check if the value has been set.
func (o *StorageDetails) GetCapacityInGbOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CapacityInGb, true
}

// SetCapacityInGb sets field value
func (o *StorageDetails) SetCapacityInGb(v int64) {
	o.CapacityInGb = v
}

// GetCreatedOn returns the CreatedOn field value
func (o *StorageDetails) GetCreatedOn() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value
// and a boolean to check if the value has been set.
func (o *StorageDetails) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedOn, true
}

// SetCreatedOn sets field value
func (o *StorageDetails) SetCreatedOn(v time.Time) {
	o.CreatedOn = v
}

func (o StorageDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["networkStorageId"] = o.NetworkStorageId
	}
	if true {
		toSerialize["networkStorageName"] = o.NetworkStorageName
	}
	if true {
		toSerialize["volumeId"] = o.VolumeId
	}
	if true {
		toSerialize["volumeName"] = o.VolumeName
	}
	if true {
		toSerialize["capacityInGb"] = o.CapacityInGb
	}
	if true {
		toSerialize["createdOn"] = o.CreatedOn
	}
	return json.Marshal(toSerialize)
}

type NullableStorageDetails struct {
	value *StorageDetails
	isSet bool
}

func (v NullableStorageDetails) Get() *StorageDetails {
	return v.value
}

func (v *NullableStorageDetails) Set(val *StorageDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageDetails(val *StorageDetails) *NullableStorageDetails {
	return &NullableStorageDetails{value: val, isSet: true}
}

func (v NullableStorageDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
