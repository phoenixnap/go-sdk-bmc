/*
Bare Metal Cloud API

Create, power off, power on, reset, reboot, or shut down your server with the Bare Metal Cloud API.  Deprovision servers, get or edit SSH key details, assign public IPs, assign servers to networks and a lot more.  Manage your infrastructure more efficiently using just a few simple API calls.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/how-to-deploy-bare-metal-cloud-server' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/bmc/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bmcapi

import (
	"encoding/json"
)

// checks if the OsConfigurationNetrisSoftgate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OsConfigurationNetrisSoftgate{}

// OsConfigurationNetrisSoftgate Netris Softgate configuration properties. Follow <a href='https://phoenixnap.com/kb/netris-bare-metal-cloud#deploy-netris-softgate' target='_blank'>instructions</a> for retrieving the required details.
type OsConfigurationNetrisSoftgate struct {
	// (Read-only) Host OS on which the Netris Softgate is installed.
	HostOs *string `json:"hostOs,omitempty"`
	// (Write-only) IP address or hostname through which to reach the Netris Controller.
	ControllerAddress *string `json:"controllerAddress,omitempty"`
	// (Write-only) The version of the Netris Controller to connect to.
	ControllerVersion *string `json:"controllerVersion,omitempty"`
	// (Write-only) The authentication key of the Netris Controller to connect to. Required for the softgate agent to be able to interact with the Netris Controller.
	ControllerAuthKey *string `json:"controllerAuthKey,omitempty"`
}

// NewOsConfigurationNetrisSoftgate instantiates a new OsConfigurationNetrisSoftgate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsConfigurationNetrisSoftgate() *OsConfigurationNetrisSoftgate {
	this := OsConfigurationNetrisSoftgate{}
	return &this
}

// NewOsConfigurationNetrisSoftgateWithDefaults instantiates a new OsConfigurationNetrisSoftgate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsConfigurationNetrisSoftgateWithDefaults() *OsConfigurationNetrisSoftgate {
	this := OsConfigurationNetrisSoftgate{}
	return &this
}

// GetHostOs returns the HostOs field value if set, zero value otherwise.
func (o *OsConfigurationNetrisSoftgate) GetHostOs() string {
	if o == nil || IsNil(o.HostOs) {
		var ret string
		return ret
	}
	return *o.HostOs
}

// GetHostOsOk returns a tuple with the HostOs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsConfigurationNetrisSoftgate) GetHostOsOk() (*string, bool) {
	if o == nil || IsNil(o.HostOs) {
		return nil, false
	}
	return o.HostOs, true
}

// HasHostOs returns a boolean if a field has been set.
func (o *OsConfigurationNetrisSoftgate) HasHostOs() bool {
	if o != nil && !IsNil(o.HostOs) {
		return true
	}

	return false
}

// SetHostOs gets a reference to the given string and assigns it to the HostOs field.
func (o *OsConfigurationNetrisSoftgate) SetHostOs(v string) {
	o.HostOs = &v
}

// GetControllerAddress returns the ControllerAddress field value if set, zero value otherwise.
func (o *OsConfigurationNetrisSoftgate) GetControllerAddress() string {
	if o == nil || IsNil(o.ControllerAddress) {
		var ret string
		return ret
	}
	return *o.ControllerAddress
}

// GetControllerAddressOk returns a tuple with the ControllerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsConfigurationNetrisSoftgate) GetControllerAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ControllerAddress) {
		return nil, false
	}
	return o.ControllerAddress, true
}

// HasControllerAddress returns a boolean if a field has been set.
func (o *OsConfigurationNetrisSoftgate) HasControllerAddress() bool {
	if o != nil && !IsNil(o.ControllerAddress) {
		return true
	}

	return false
}

// SetControllerAddress gets a reference to the given string and assigns it to the ControllerAddress field.
func (o *OsConfigurationNetrisSoftgate) SetControllerAddress(v string) {
	o.ControllerAddress = &v
}

// GetControllerVersion returns the ControllerVersion field value if set, zero value otherwise.
func (o *OsConfigurationNetrisSoftgate) GetControllerVersion() string {
	if o == nil || IsNil(o.ControllerVersion) {
		var ret string
		return ret
	}
	return *o.ControllerVersion
}

// GetControllerVersionOk returns a tuple with the ControllerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsConfigurationNetrisSoftgate) GetControllerVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ControllerVersion) {
		return nil, false
	}
	return o.ControllerVersion, true
}

// HasControllerVersion returns a boolean if a field has been set.
func (o *OsConfigurationNetrisSoftgate) HasControllerVersion() bool {
	if o != nil && !IsNil(o.ControllerVersion) {
		return true
	}

	return false
}

// SetControllerVersion gets a reference to the given string and assigns it to the ControllerVersion field.
func (o *OsConfigurationNetrisSoftgate) SetControllerVersion(v string) {
	o.ControllerVersion = &v
}

// GetControllerAuthKey returns the ControllerAuthKey field value if set, zero value otherwise.
func (o *OsConfigurationNetrisSoftgate) GetControllerAuthKey() string {
	if o == nil || IsNil(o.ControllerAuthKey) {
		var ret string
		return ret
	}
	return *o.ControllerAuthKey
}

// GetControllerAuthKeyOk returns a tuple with the ControllerAuthKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsConfigurationNetrisSoftgate) GetControllerAuthKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ControllerAuthKey) {
		return nil, false
	}
	return o.ControllerAuthKey, true
}

// HasControllerAuthKey returns a boolean if a field has been set.
func (o *OsConfigurationNetrisSoftgate) HasControllerAuthKey() bool {
	if o != nil && !IsNil(o.ControllerAuthKey) {
		return true
	}

	return false
}

// SetControllerAuthKey gets a reference to the given string and assigns it to the ControllerAuthKey field.
func (o *OsConfigurationNetrisSoftgate) SetControllerAuthKey(v string) {
	o.ControllerAuthKey = &v
}

func (o OsConfigurationNetrisSoftgate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OsConfigurationNetrisSoftgate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HostOs) {
		toSerialize["hostOs"] = o.HostOs
	}
	if !IsNil(o.ControllerAddress) {
		toSerialize["controllerAddress"] = o.ControllerAddress
	}
	if !IsNil(o.ControllerVersion) {
		toSerialize["controllerVersion"] = o.ControllerVersion
	}
	if !IsNil(o.ControllerAuthKey) {
		toSerialize["controllerAuthKey"] = o.ControllerAuthKey
	}
	return toSerialize, nil
}

type NullableOsConfigurationNetrisSoftgate struct {
	value *OsConfigurationNetrisSoftgate
	isSet bool
}

func (v NullableOsConfigurationNetrisSoftgate) Get() *OsConfigurationNetrisSoftgate {
	return v.value
}

func (v *NullableOsConfigurationNetrisSoftgate) Set(val *OsConfigurationNetrisSoftgate) {
	v.value = val
	v.isSet = true
}

func (v NullableOsConfigurationNetrisSoftgate) IsSet() bool {
	return v.isSet
}

func (v *NullableOsConfigurationNetrisSoftgate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsConfigurationNetrisSoftgate(val *OsConfigurationNetrisSoftgate) *NullableOsConfigurationNetrisSoftgate {
	return &NullableOsConfigurationNetrisSoftgate{value: val, isSet: true}
}

func (v NullableOsConfigurationNetrisSoftgate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsConfigurationNetrisSoftgate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
