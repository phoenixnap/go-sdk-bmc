/*
Bare Metal Cloud API

Create, power off, power on, reset, reboot, or shut down your server with the Bare Metal Cloud API.  Deprovision servers, get or edit SSH key details, assign public IPs, assign servers to networks and a lot more.  Manage your infrastructure more efficiently using just a few simple API calls.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/how-to-deploy-bare-metal-cloud-server' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/bmc/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bmcapi

import (
	"encoding/json"
)

// checks if the PublicNetworkConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicNetworkConfiguration{}

// PublicNetworkConfiguration Public network details of bare metal server.
type PublicNetworkConfiguration struct {
	// The list of public networks this server is member of. When this field is part of request body, it'll be used to specify the public networks to assign to this server upon provisioning.
	PublicNetworks []ServerPublicNetwork `json:"publicNetworks,omitempty"`
}

// NewPublicNetworkConfiguration instantiates a new PublicNetworkConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicNetworkConfiguration() *PublicNetworkConfiguration {
	this := PublicNetworkConfiguration{}
	return &this
}

// NewPublicNetworkConfigurationWithDefaults instantiates a new PublicNetworkConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicNetworkConfigurationWithDefaults() *PublicNetworkConfiguration {
	this := PublicNetworkConfiguration{}
	return &this
}

// GetPublicNetworks returns the PublicNetworks field value if set, zero value otherwise.
func (o *PublicNetworkConfiguration) GetPublicNetworks() []ServerPublicNetwork {
	if o == nil || IsNil(o.PublicNetworks) {
		var ret []ServerPublicNetwork
		return ret
	}
	return o.PublicNetworks
}

// GetPublicNetworksOk returns a tuple with the PublicNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicNetworkConfiguration) GetPublicNetworksOk() ([]ServerPublicNetwork, bool) {
	if o == nil || IsNil(o.PublicNetworks) {
		return nil, false
	}
	return o.PublicNetworks, true
}

// HasPublicNetworks returns a boolean if a field has been set.
func (o *PublicNetworkConfiguration) HasPublicNetworks() bool {
	if o != nil && !IsNil(o.PublicNetworks) {
		return true
	}

	return false
}

// SetPublicNetworks gets a reference to the given []ServerPublicNetwork and assigns it to the PublicNetworks field.
func (o *PublicNetworkConfiguration) SetPublicNetworks(v []ServerPublicNetwork) {
	o.PublicNetworks = v
}

func (o PublicNetworkConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicNetworkConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PublicNetworks) {
		toSerialize["publicNetworks"] = o.PublicNetworks
	}
	return toSerialize, nil
}

type NullablePublicNetworkConfiguration struct {
	value *PublicNetworkConfiguration
	isSet bool
}

func (v NullablePublicNetworkConfiguration) Get() *PublicNetworkConfiguration {
	return v.value
}

func (v *NullablePublicNetworkConfiguration) Set(val *PublicNetworkConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicNetworkConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicNetworkConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicNetworkConfiguration(val *PublicNetworkConfiguration) *NullablePublicNetworkConfiguration {
	return &NullablePublicNetworkConfiguration{value: val, isSet: true}
}

func (v NullablePublicNetworkConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicNetworkConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
