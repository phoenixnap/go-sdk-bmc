/*
Bare Metal Cloud API

Create, power off, power on, reset, reboot, or shut down your server with the Bare Metal Cloud API.  Deprovision servers, get or edit SSH key details, assign public IPs, assign servers to networks and a lot more.  Manage your infrastructure more efficiently using just a few simple API calls.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/how-to-deploy-bare-metal-cloud-server' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/bmc/v1/)</b>

API version: 0.1
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bmcapi

import (
	"encoding/json"
)

// SshKeyCreate SSH key creation model.
type SshKeyCreate struct {
	// Keys marked as default are always included on server creation and reset unless toggled off in creation/reset request.
	Default bool `json:"default"`
	// Friendly SSH key name to represent an SSH key.
	Name string `json:"name"`
	// SSH key actual key value.
	Key string `json:"key"`
}

// NewSshKeyCreate instantiates a new SshKeyCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshKeyCreate(default_ bool, name string, key string) *SshKeyCreate {
	this := SshKeyCreate{}
	this.Default = default_
	this.Name = name
	this.Key = key
	return &this
}

// NewSshKeyCreateWithDefaults instantiates a new SshKeyCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshKeyCreateWithDefaults() *SshKeyCreate {
	this := SshKeyCreate{}
	return &this
}

// GetDefault returns the Default field value
func (o *SshKeyCreate) GetDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Default
}

// GetDefaultOk returns a tuple with the Default field value
// and a boolean to check if the value has been set.
func (o *SshKeyCreate) GetDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Default, true
}

// SetDefault sets field value
func (o *SshKeyCreate) SetDefault(v bool) {
	o.Default = v
}

// GetName returns the Name field value
func (o *SshKeyCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SshKeyCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SshKeyCreate) SetName(v string) {
	o.Name = v
}

// GetKey returns the Key field value
func (o *SshKeyCreate) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *SshKeyCreate) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *SshKeyCreate) SetKey(v string) {
	o.Key = v
}

func (o SshKeyCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["default"] = o.Default
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableSshKeyCreate struct {
	value *SshKeyCreate
	isSet bool
}

func (v NullableSshKeyCreate) Get() *SshKeyCreate {
	return v.value
}

func (v *NullableSshKeyCreate) Set(val *SshKeyCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableSshKeyCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableSshKeyCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshKeyCreate(val *SshKeyCreate) *NullableSshKeyCreate {
	return &NullableSshKeyCreate{value: val, isSet: true}
}

func (v NullableSshKeyCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshKeyCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
