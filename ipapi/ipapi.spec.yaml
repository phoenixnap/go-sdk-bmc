openapi: 3.0.2
info:
  title: IP Addresses API
  description: >
    Public IP blocks are a set of contiguous IPs that allow you to access your
    servers or networks from the internet.

    Use the IP Addresses API to request and delete IP blocks.<br>

    <br>

    <span class='pnap-api-knowledge-base-link'>

    Knowledge base articles to help you can be found

    <a
    href='https://phoenixnap.com/kb/public-ip-management#bmc-public-ip-allocations-api'
    target='_blank'>here</a>

    </span><br>

    <br>

    <b>All URLs are relative to (https://api.phoenixnap.com/ips/v1/)</b>
  termsOfService: >-
    https://phoenixnap.com/infrastructure-solutions/legal-it/privacy-shield-compliant-privacy-policy
  version: '1.0'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  contact:
    name: PhoenixNAP Team
    email: support@phoenixnap.com
    url: 'https://phoenixnap.com/'
security:
  - OAuth2:
      - bmc
      - bmc.read
servers:
  - url: 'https://api.phoenixnap.com/ips/v1'
tags:
  - name: IP Blocks
    description: Public IP Block operations.
paths:
  /ip-blocks:
    get:
      tags:
        - IP Blocks
      description: List all IP Blocks.
      summary: List IP Blocks.
      operationId: ipBlocksGet
      security:
        - OAuth2:
            - bmc.read
      parameters:
        - in: query
          name: tag
          schema:
            type: array
            items:
              type: string
          description: 'List of tags, in the form tagName.tagValue, to filter by.'
          explode: true
          example:
            - env.dev
            - loc.phx
      responses:
        '200':
          description: IP Blocks list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IpBlock'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - IP Blocks
      description: >-
        Request an IP Block. An IP Block is a set of contiguous IPs that can be
        assigned to other resources such as servers.
      summary: Create an IP Block.
      operationId: ipBlocksPost
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpBlockCreate'
            example:
              cidrBlockSize: /28
              location: PHX
              description: 'IP Block #1 used for publicly accessing server #1.'
      responses:
        '201':
          description: IP Block created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpBlock'
              example:
                id: 6047127fed34ecc3ba8402d2
                cidr: 1.1.1.0/28
                location: PHX
                cidrBlockSize: /28
                status: unassigned
                description: 'IP Block #1 used for publicly accessing server #1.'
                isBringYourOwn: false
                createdOn: '2021-03-13T20:24:32.491Z'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAccepted'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ip-blocks/{ipBlockId}':
    parameters:
      - $ref: '#/components/parameters/ipBlockIdPathParam'
    get:
      tags:
        - IP Blocks
      description: Get IP Block.
      summary: Get IP Block.
      operationId: ipBlocksIpBlockIdGet
      security:
        - OAuth2:
            - bmc.read
      responses:
        '200':
          description: Specific IP Block details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpBlock'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - IP Blocks
      description: >-
        Delete an IP Block. An IP Block can only be deleted if not assigned to
        any resource.
      summary: Delete IP Block.
      operationId: ipBlocksIpBlockIdDelete
      security:
        - OAuth2:
            - bmc
      responses:
        '200':
          description: IP Block deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteIpBlockResult'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      tags:
        - IP Blocks
      description: Update IP Block's details.
      summary: Update IP block.
      operationId: ipBlocksIpBlockIdPatch
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpBlockPatch'
            example:
              description: Ip Block description
      responses:
        '200':
          description: Updated IpBlock.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpBlock'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ip-blocks/{ipBlockId}/tags':
    parameters:
      - $ref: '#/components/parameters/ipBlockIdPathParam'
    put:
      tags:
        - IP Blocks
      description: >-
        Overwrites tags assigned for IP Block and unassigns any tags not part of
        the request.
      summary: Overwrite tags assigned for IP Block.
      operationId: ipBlocksIpBlockIdTagsPut
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TagAssignmentRequest'
              example:
                - name: stage
                  value: beta
                - name: group
                  value: discountId
      responses:
        '200':
          description: IP Blocks tags set.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpBlock'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: >-
            https://auth.phoenixnap.com/auth/realms/BMC/protocol/openid-connect/token
          scopes:
            bmc: Grants full access to bmc-api.
            bmc.read: Grants read only access to bmc-api.
  schemas:
    IpBlockPatch:
      type: object
      description: IP Block patch.
      properties:
        description:
          description: The description of the Ip Block.
          type: string
          example: Ip Block allocation.
          maxLength: 250
    IpBlockCreate:
      type: object
      description: IP Block Request.
      required:
        - location
        - cidrBlockSize
      properties:
        location:
          description: >-
            IP Block location ID. Currently this field should be set to `PHX`,
            `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
          type: string
          example: PHX
        cidrBlockSize:
          description: >-
            CIDR IP Block Size. Currently this field should be set to either
            `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact
            support.
          type: string
          example: /30
        description:
          description: The description of the IP Block.
          type: string
          example: 'IP Block #1 used for publicly accessing server #1.'
          maxLength: 250
        tags:
          description: >-
            Tags to set to the ip-block. To create a new tag or list all the
            existing tags that you can use, refer to [Tags
            API](https://developers.phoenixnap.com/docs/tags/1/overview).
          type: array
          items:
            $ref: '#/components/schemas/TagAssignmentRequest'
          example:
            - name: stage
              value: beta
            - name: group
              value: discounted
    IpBlock:
      type: object
      description: IP Block Details.
      required:
        - id
        - location
        - cidrBlockSize
        - cidr
        - status
        - isBringYourOwn
        - createdOn
      properties:
        id:
          description: IP Block identifier.
          type: string
          example: 6047127fed34ecc3ba8402d2
        location:
          description: >-
            IP Block location ID. Currently this field should be set to `PHX`,
            `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
          type: string
          example: PHX
        cidrBlockSize:
          description: >-
            CIDR IP Block Size. Currently this field should be set to either
            `/31`, `/30`, `/29`, `/28`, `/27`, `/26`, `/25`, `/24`, `/23` or
            `/22`.
          type: string
          example: /30
        cidr:
          description: The IP Block in CIDR notation.
          type: string
          example: 1.1.1.0/31
        status:
          description: The status of the IP Block.
          type: string
          example: unassigned
        assignedResourceId:
          description: ID of the resource assigned to the IP Block.
          type: string
          example: 6047127fed34ecc3ba8402d2
        assignedResourceType:
          description: Type of the resource assigned to the IP Block.
          type: string
          example: server
        description:
          description: The description of the IP Block.
          type: string
          example: 'IP Block #1 used for publicly accessing server #1.'
          maxLength: 250
        tags:
          description: The tags assigned if any.
          type: array
          items:
            $ref: '#/components/schemas/TagAssignment'
          example:
            - name: stage
              value: beta
            - name: group
              value: discounted
        isBringYourOwn:
          description: True if the IP block is a `bring your own` block.
          type: boolean
          example: false
        createdOn:
          description: Date and time when the IP block was created.
          type: string
          format: date-time
          example: '2021-03-13T20:24:32.491Z'
    DeleteIpBlockResult:
      type: object
      description: Result of a successful delete action.
      required:
        - result
        - ipBlockId
      properties:
        result:
          description: IP Block has been deleted.
          type: string
          example: IP Block has been deleted.
        ipBlockId:
          description: The unique identifier of the IP Block.
          type: string
          example: 6047127fed34ecc3ba8402d2
    TagAssignment:
      type: object
      description: Tag assigned to resource.
      required:
        - id
        - name
        - isBillingTag
      properties:
        id:
          description: The unique id of the tag.
          type: string
          example: 60ffafcdffb8b074c7968dad
        name:
          description: The name of the tag.
          type: string
          example: Environment
        value:
          description: The value of the tag assigned to the resource.
          type: string
          example: PROD
        isBillingTag:
          description: Whether or not to show the tag as part of billing and invoices
          type: boolean
          example: true
        createdBy:
          description: Who the tag was created by.
          type: string
          enum:
            - USER
            - SYSTEM
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          readOnly: true
          description: The description detailing the cause of the error code.
        validationErrors:
          type: array
          items:
            type: string
          readOnly: true
          description: 'Validation errors, if any.'
    TagAssignmentRequest:
      type: object
      description: Tag request to assign to resource.
      required:
        - name
      properties:
        name:
          description: >-
            The name of the tag. Tag names are case-sensitive, and should be
            composed of a maximum of 100 characters including UTF-8 Unicode
            letters, numbers, and the following symbols: '-', '_'. Regex:
            [A-zÀ-ú0-9_-]{1,100}.
          type: string
          example: Environment
        value:
          description: >-
            The value of the tag assigned to the resource. Tag values are
            case-sensitive, and should be composed of a maximum of 100
            characters including UTF-8 Unicode letters, numbers, and the
            following symbols: '-', '_'. Regex: [A-zÀ-ú0-9_-]{1,100}.
          type: string
          example: PROD
  responses:
    Unauthorized:
      description: >-
        The request failed due to invalid credentials. Please check the provided
        credentials and try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: >-
        The request failed since this resource cannot be accessed by the
        provided credentials.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: >-
        The server encountered an unexpected condition that prevented it from
        fulfilling the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: >-
        The request failed due to wrong data. Please check the provided
        parameters and try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotAccepted:
      description: No server available of type server.type.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The request failed since the resource could not been found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    ipBlockIdPathParam:
      in: path
      name: ipBlockId
      required: true
      schema:
        type: string
      description: The IP Block identifier.
      example: 6047127fed34ecc3ba8402d2
