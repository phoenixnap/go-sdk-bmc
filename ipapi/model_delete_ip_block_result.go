/*
IP Addresses API

Public IP blocks are a set of contiguous IPs that allow you to access your servers or networks from the internet. Use the IP Addresses API to request and delete IP blocks.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/public-ip-management#bmc-public-ip-allocations-api' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/ips/v1/)</b>

API version: 1.0
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipapi

import (
	"encoding/json"
)

// DeleteIpBlockResult Result of a successful delete action.
type DeleteIpBlockResult struct {
	// IP Block has been deleted.
	Result string `json:"result"`
	// The unique identifier of the IP Block.
	IpBlockId string `json:"ipBlockId"`
}

// NewDeleteIpBlockResult instantiates a new DeleteIpBlockResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteIpBlockResult(result string, ipBlockId string) *DeleteIpBlockResult {
	this := DeleteIpBlockResult{}
	this.Result = result
	this.IpBlockId = ipBlockId
	return &this
}

// NewDeleteIpBlockResultWithDefaults instantiates a new DeleteIpBlockResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteIpBlockResultWithDefaults() *DeleteIpBlockResult {
	this := DeleteIpBlockResult{}
	return &this
}

// GetResult returns the Result field value
func (o *DeleteIpBlockResult) GetResult() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *DeleteIpBlockResult) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *DeleteIpBlockResult) SetResult(v string) {
	o.Result = v
}

// GetIpBlockId returns the IpBlockId field value
func (o *DeleteIpBlockResult) GetIpBlockId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpBlockId
}

// GetIpBlockIdOk returns a tuple with the IpBlockId field value
// and a boolean to check if the value has been set.
func (o *DeleteIpBlockResult) GetIpBlockIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpBlockId, true
}

// SetIpBlockId sets field value
func (o *DeleteIpBlockResult) SetIpBlockId(v string) {
	o.IpBlockId = v
}

func (o DeleteIpBlockResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["result"] = o.Result
	}
	if true {
		toSerialize["ipBlockId"] = o.IpBlockId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteIpBlockResult struct {
	value *DeleteIpBlockResult
	isSet bool
}

func (v NullableDeleteIpBlockResult) Get() *DeleteIpBlockResult {
	return v.value
}

func (v *NullableDeleteIpBlockResult) Set(val *DeleteIpBlockResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteIpBlockResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteIpBlockResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteIpBlockResult(val *DeleteIpBlockResult) *NullableDeleteIpBlockResult {
	return &NullableDeleteIpBlockResult{value: val, isSet: true}
}

func (v NullableDeleteIpBlockResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteIpBlockResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
