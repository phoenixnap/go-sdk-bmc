/*
IP Addresses API

Public IP blocks are a set of contiguous IPs that allow you to access your servers or networks from the internet. Use the IP Addresses API to request and delete IP blocks.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/public-ip-management#bmc-public-ip-allocations-api' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/ips/v1/)</b>

API version: 1.0
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipapi

import (
	"encoding/json"
	"time"
)

// checks if the IpBlock type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpBlock{}

// IpBlock IP Block Details.
type IpBlock struct {
	// IP Block identifier.
	Id *string `json:"id,omitempty"`
	// IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
	Location *string `json:"location,omitempty"`
	// CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29`, `/28`, `/27`, `/26`, `/25`, `/24`, `/23` or `/22`.
	CidrBlockSize *string `json:"cidrBlockSize,omitempty"`
	// The IP Block in CIDR notation.
	Cidr *string `json:"cidr,omitempty"`
	// The IP Version of the block.
	IpVersion *string `json:"ipVersion,omitempty"`
	// The status of the IP Block. Can have one of the following values: `creating`, `subnetted`, `assigning` , `error assigning` , `assigned` , `unassigning` , `error unassigning` or `unassigned`.
	Status *string `json:"status,omitempty"`
	// IP Block parent identifier. If present, this block is subnetted from the parent IP Block.
	ParentIpBlockAllocationId *string `json:"parentIpBlockAllocationId,omitempty"`
	// ID of the resource assigned to the IP Block.
	AssignedResourceId *string `json:"assignedResourceId,omitempty"`
	// Type of the resource assigned to the IP Block.
	AssignedResourceType *string `json:"assignedResourceType,omitempty"`
	// The description of the IP Block.
	Description *string `json:"description,omitempty"`
	// The tags assigned if any.
	Tags []TagAssignment `json:"tags,omitempty"`
	// True if the IP block is a `system managed` block.
	IsSystemManaged *bool `json:"isSystemManaged,omitempty"`
	// True if the IP block is a `bring your own` block.
	IsBringYourOwn *bool `json:"isBringYourOwn,omitempty"`
	// Date and time when the IP block was created.
	CreatedOn            *time.Time `json:"createdOn,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IpBlock IpBlock

// NewIpBlock instantiates a new IpBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpBlock() *IpBlock {
	this := IpBlock{}
	return &this
}

// NewIpBlockWithDefaults instantiates a new IpBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpBlockWithDefaults() *IpBlock {
	this := IpBlock{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IpBlock) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IpBlock) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IpBlock) SetId(v string) {
	o.Id = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *IpBlock) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *IpBlock) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *IpBlock) SetLocation(v string) {
	o.Location = &v
}

// GetCidrBlockSize returns the CidrBlockSize field value if set, zero value otherwise.
func (o *IpBlock) GetCidrBlockSize() string {
	if o == nil || IsNil(o.CidrBlockSize) {
		var ret string
		return ret
	}
	return *o.CidrBlockSize
}

// GetCidrBlockSizeOk returns a tuple with the CidrBlockSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetCidrBlockSizeOk() (*string, bool) {
	if o == nil || IsNil(o.CidrBlockSize) {
		return nil, false
	}
	return o.CidrBlockSize, true
}

// HasCidrBlockSize returns a boolean if a field has been set.
func (o *IpBlock) HasCidrBlockSize() bool {
	if o != nil && !IsNil(o.CidrBlockSize) {
		return true
	}

	return false
}

// SetCidrBlockSize gets a reference to the given string and assigns it to the CidrBlockSize field.
func (o *IpBlock) SetCidrBlockSize(v string) {
	o.CidrBlockSize = &v
}

// GetCidr returns the Cidr field value if set, zero value otherwise.
func (o *IpBlock) GetCidr() string {
	if o == nil || IsNil(o.Cidr) {
		var ret string
		return ret
	}
	return *o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetCidrOk() (*string, bool) {
	if o == nil || IsNil(o.Cidr) {
		return nil, false
	}
	return o.Cidr, true
}

// HasCidr returns a boolean if a field has been set.
func (o *IpBlock) HasCidr() bool {
	if o != nil && !IsNil(o.Cidr) {
		return true
	}

	return false
}

// SetCidr gets a reference to the given string and assigns it to the Cidr field.
func (o *IpBlock) SetCidr(v string) {
	o.Cidr = &v
}

// GetIpVersion returns the IpVersion field value if set, zero value otherwise.
func (o *IpBlock) GetIpVersion() string {
	if o == nil || IsNil(o.IpVersion) {
		var ret string
		return ret
	}
	return *o.IpVersion
}

// GetIpVersionOk returns a tuple with the IpVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetIpVersionOk() (*string, bool) {
	if o == nil || IsNil(o.IpVersion) {
		return nil, false
	}
	return o.IpVersion, true
}

// HasIpVersion returns a boolean if a field has been set.
func (o *IpBlock) HasIpVersion() bool {
	if o != nil && !IsNil(o.IpVersion) {
		return true
	}

	return false
}

// SetIpVersion gets a reference to the given string and assigns it to the IpVersion field.
func (o *IpBlock) SetIpVersion(v string) {
	o.IpVersion = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *IpBlock) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *IpBlock) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *IpBlock) SetStatus(v string) {
	o.Status = &v
}

// GetParentIpBlockAllocationId returns the ParentIpBlockAllocationId field value if set, zero value otherwise.
func (o *IpBlock) GetParentIpBlockAllocationId() string {
	if o == nil || IsNil(o.ParentIpBlockAllocationId) {
		var ret string
		return ret
	}
	return *o.ParentIpBlockAllocationId
}

// GetParentIpBlockAllocationIdOk returns a tuple with the ParentIpBlockAllocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetParentIpBlockAllocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentIpBlockAllocationId) {
		return nil, false
	}
	return o.ParentIpBlockAllocationId, true
}

// HasParentIpBlockAllocationId returns a boolean if a field has been set.
func (o *IpBlock) HasParentIpBlockAllocationId() bool {
	if o != nil && !IsNil(o.ParentIpBlockAllocationId) {
		return true
	}

	return false
}

// SetParentIpBlockAllocationId gets a reference to the given string and assigns it to the ParentIpBlockAllocationId field.
func (o *IpBlock) SetParentIpBlockAllocationId(v string) {
	o.ParentIpBlockAllocationId = &v
}

// GetAssignedResourceId returns the AssignedResourceId field value if set, zero value otherwise.
func (o *IpBlock) GetAssignedResourceId() string {
	if o == nil || IsNil(o.AssignedResourceId) {
		var ret string
		return ret
	}
	return *o.AssignedResourceId
}

// GetAssignedResourceIdOk returns a tuple with the AssignedResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetAssignedResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssignedResourceId) {
		return nil, false
	}
	return o.AssignedResourceId, true
}

// HasAssignedResourceId returns a boolean if a field has been set.
func (o *IpBlock) HasAssignedResourceId() bool {
	if o != nil && !IsNil(o.AssignedResourceId) {
		return true
	}

	return false
}

// SetAssignedResourceId gets a reference to the given string and assigns it to the AssignedResourceId field.
func (o *IpBlock) SetAssignedResourceId(v string) {
	o.AssignedResourceId = &v
}

// GetAssignedResourceType returns the AssignedResourceType field value if set, zero value otherwise.
func (o *IpBlock) GetAssignedResourceType() string {
	if o == nil || IsNil(o.AssignedResourceType) {
		var ret string
		return ret
	}
	return *o.AssignedResourceType
}

// GetAssignedResourceTypeOk returns a tuple with the AssignedResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetAssignedResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AssignedResourceType) {
		return nil, false
	}
	return o.AssignedResourceType, true
}

// HasAssignedResourceType returns a boolean if a field has been set.
func (o *IpBlock) HasAssignedResourceType() bool {
	if o != nil && !IsNil(o.AssignedResourceType) {
		return true
	}

	return false
}

// SetAssignedResourceType gets a reference to the given string and assigns it to the AssignedResourceType field.
func (o *IpBlock) SetAssignedResourceType(v string) {
	o.AssignedResourceType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *IpBlock) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *IpBlock) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *IpBlock) SetDescription(v string) {
	o.Description = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *IpBlock) GetTags() []TagAssignment {
	if o == nil || IsNil(o.Tags) {
		var ret []TagAssignment
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetTagsOk() ([]TagAssignment, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *IpBlock) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagAssignment and assigns it to the Tags field.
func (o *IpBlock) SetTags(v []TagAssignment) {
	o.Tags = v
}

// GetIsSystemManaged returns the IsSystemManaged field value if set, zero value otherwise.
func (o *IpBlock) GetIsSystemManaged() bool {
	if o == nil || IsNil(o.IsSystemManaged) {
		var ret bool
		return ret
	}
	return *o.IsSystemManaged
}

// GetIsSystemManagedOk returns a tuple with the IsSystemManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetIsSystemManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSystemManaged) {
		return nil, false
	}
	return o.IsSystemManaged, true
}

// HasIsSystemManaged returns a boolean if a field has been set.
func (o *IpBlock) HasIsSystemManaged() bool {
	if o != nil && !IsNil(o.IsSystemManaged) {
		return true
	}

	return false
}

// SetIsSystemManaged gets a reference to the given bool and assigns it to the IsSystemManaged field.
func (o *IpBlock) SetIsSystemManaged(v bool) {
	o.IsSystemManaged = &v
}

// GetIsBringYourOwn returns the IsBringYourOwn field value if set, zero value otherwise.
func (o *IpBlock) GetIsBringYourOwn() bool {
	if o == nil || IsNil(o.IsBringYourOwn) {
		var ret bool
		return ret
	}
	return *o.IsBringYourOwn
}

// GetIsBringYourOwnOk returns a tuple with the IsBringYourOwn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetIsBringYourOwnOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBringYourOwn) {
		return nil, false
	}
	return o.IsBringYourOwn, true
}

// HasIsBringYourOwn returns a boolean if a field has been set.
func (o *IpBlock) HasIsBringYourOwn() bool {
	if o != nil && !IsNil(o.IsBringYourOwn) {
		return true
	}

	return false
}

// SetIsBringYourOwn gets a reference to the given bool and assigns it to the IsBringYourOwn field.
func (o *IpBlock) SetIsBringYourOwn(v bool) {
	o.IsBringYourOwn = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *IpBlock) GetCreatedOn() time.Time {
	if o == nil || IsNil(o.CreatedOn) {
		var ret time.Time
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlock) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *IpBlock) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given time.Time and assigns it to the CreatedOn field.
func (o *IpBlock) SetCreatedOn(v time.Time) {
	o.CreatedOn = &v
}

func (o IpBlock) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpBlock) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.CidrBlockSize) {
		toSerialize["cidrBlockSize"] = o.CidrBlockSize
	}
	if !IsNil(o.Cidr) {
		toSerialize["cidr"] = o.Cidr
	}
	if !IsNil(o.IpVersion) {
		toSerialize["ipVersion"] = o.IpVersion
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ParentIpBlockAllocationId) {
		toSerialize["parentIpBlockAllocationId"] = o.ParentIpBlockAllocationId
	}
	if !IsNil(o.AssignedResourceId) {
		toSerialize["assignedResourceId"] = o.AssignedResourceId
	}
	if !IsNil(o.AssignedResourceType) {
		toSerialize["assignedResourceType"] = o.AssignedResourceType
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.IsSystemManaged) {
		toSerialize["isSystemManaged"] = o.IsSystemManaged
	}
	if !IsNil(o.IsBringYourOwn) {
		toSerialize["isBringYourOwn"] = o.IsBringYourOwn
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["createdOn"] = o.CreatedOn
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IpBlock) UnmarshalJSON(data []byte) (err error) {
	varIpBlock := _IpBlock{}

	err = json.Unmarshal(data, &varIpBlock)

	if err != nil {
		return err
	}

	*o = IpBlock(varIpBlock)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "location")
		delete(additionalProperties, "cidrBlockSize")
		delete(additionalProperties, "cidr")
		delete(additionalProperties, "ipVersion")
		delete(additionalProperties, "status")
		delete(additionalProperties, "parentIpBlockAllocationId")
		delete(additionalProperties, "assignedResourceId")
		delete(additionalProperties, "assignedResourceType")
		delete(additionalProperties, "description")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "isSystemManaged")
		delete(additionalProperties, "isBringYourOwn")
		delete(additionalProperties, "createdOn")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIpBlock struct {
	value *IpBlock
	isSet bool
}

func (v NullableIpBlock) Get() *IpBlock {
	return v.value
}

func (v *NullableIpBlock) Set(val *IpBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableIpBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableIpBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpBlock(val *IpBlock) *NullableIpBlock {
	return &NullableIpBlock{value: val, isSet: true}
}

func (v NullableIpBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
