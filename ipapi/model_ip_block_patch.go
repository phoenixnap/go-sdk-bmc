/*
IP Addresses API

Public IP blocks are a set of contiguous IPs that allow you to access your servers or networks from the internet. Use the IP Addresses API to request and delete IP blocks.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/public-ip-management#bmc-public-ip-allocations-api' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/ips/v1/)</b>

API version: 1.0
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipapi

import (
	"encoding/json"
)

// IpBlockPatch IP Block patch.
type IpBlockPatch struct {
	// The description of the Ip Block.
	Description *string `json:"description,omitempty"`
}

// NewIpBlockPatch instantiates a new IpBlockPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpBlockPatch() *IpBlockPatch {
	this := IpBlockPatch{}
	return &this
}

// NewIpBlockPatchWithDefaults instantiates a new IpBlockPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpBlockPatchWithDefaults() *IpBlockPatch {
	this := IpBlockPatch{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *IpBlockPatch) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpBlockPatch) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *IpBlockPatch) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *IpBlockPatch) SetDescription(v string) {
	o.Description = &v
}

func (o IpBlockPatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableIpBlockPatch struct {
	value *IpBlockPatch
	isSet bool
}

func (v NullableIpBlockPatch) Get() *IpBlockPatch {
	return v.value
}

func (v *NullableIpBlockPatch) Set(val *IpBlockPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableIpBlockPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableIpBlockPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpBlockPatch(val *IpBlockPatch) *NullableIpBlockPatch {
	return &NullableIpBlockPatch{value: val, isSet: true}
}

func (v NullableIpBlockPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpBlockPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
