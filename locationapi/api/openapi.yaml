openapi: 3.0.2
info:
  contact:
    email: support@phoenixnap.com
    name: PhoenixNAP Team
    url: https://phoenixnap.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://phoenixnap.com/infrastructure-solutions/legal-it/privacy-shield-compliant-privacy-policy
  title: Locations API
  version: "1.0"
servers:
- url: https://api.phoenixnap.com/location-api/v1
tags:
- description: Location operations
  name: Locations
paths:
  /locations:
    get:
      description: Retrieve the locations info.
      operationId: getLocations
      parameters:
      - description: Location of interest
        example: ASH
        explode: true
        in: query
        name: location
        required: false
        schema:
          $ref: '#/components/schemas/LocationEnum'
        style: form
      - description: Product category of interest
        example: SERVER
        explode: true
        in: query
        name: productCategory
        required: false
        schema:
          $ref: '#/components/schemas/ProductCategoryEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                LocationsArray:
                  $ref: '#/components/examples/LocationsArrayExample'
              schema:
                items:
                  $ref: '#/components/schemas/Location'
                type: array
          description: Locations found
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request failed since the resource could not been found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request.
      summary: Get All Locations
      tags:
      - Locations
components:
  examples:
    LocationsArrayExample:
      value:
      - location: PHX
        locationDescription: "Phoenix, USA"
        productCategories:
        - productCategory: SERVER
          productCategoryDescription: Bare metal server
        - productCategory: STORAGE
          productCategoryDescription: Network storage
      - location: ASH
        locationDescription: "Ashburn, USA"
        productCategories:
        - productCategory: SERVER
          productCategoryDescription: Bare metal server
  responses:
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request failed since the resource could not been found.
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The server encountered an unexpected condition that prevented it
        from fulfilling the request.
  schemas:
    Location:
      description: Location resource
      example:
        productCategories:
        - productCategoryDescription: Bare metal server
          productCategory: null
        - productCategoryDescription: Bare metal server
          productCategory: null
        locationDescription: "Phoenix, USA"
        location: null
      properties:
        location:
          $ref: '#/components/schemas/LocationEnum'
        locationDescription:
          example: "Phoenix, USA"
          type: string
        productCategories:
          items:
            $ref: '#/components/schemas/ProductCategory'
          type: array
      required:
      - location
      title: Location
      type: object
      x-examples:
        Example 1:
          location: PHX
          locationDescription: "Phoenix, USA"
          productCategories:
          - productCategory: SERVER
            productCategoryDescription: Bare metal server
          - productCategory: STORAGE
            productCategoryDescription: Network storage
    ProductCategory:
      example:
        productCategoryDescription: Bare metal server
        productCategory: null
      properties:
        productCategory:
          $ref: '#/components/schemas/ProductCategoryEnum'
        productCategoryDescription:
          example: Bare metal server
          type: string
      required:
      - productCategory
      title: ProductCategory
      type: object
      x-examples:
        Example 1:
          productCategory: SERVER
          productCategoryDescription: Bare metal server
    LocationEnum:
      description: The location code.
      enum:
      - PHX
      - ASH
      - NLD
      - SGP
      - CHI
      - SEA
      - AUS
      type: string
    ProductCategoryEnum:
      description: The product category.
      enum:
      - SERVER
      - BANDWIDTH
      - OPERATING_SYSTEM
      - PUBLIC_IP
      - STORAGE
      type: string
    Error:
      properties:
        message:
          description: The description detailing the cause of the error code.
          readOnly: true
          type: string
        validationErrors:
          description: "Validation errors, if any."
          items:
            type: string
          readOnly: true
          type: array
      required:
      - message
      type: object
