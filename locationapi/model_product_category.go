/*
Locations API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package locationapi

import (
	"encoding/json"
)

// ProductCategory struct for ProductCategory
type ProductCategory struct {
	ProductCategory            ProductCategoryEnum `json:"productCategory"`
	ProductCategoryDescription *string             `json:"productCategoryDescription,omitempty"`
}

// NewProductCategory instantiates a new ProductCategory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductCategory(productCategory ProductCategoryEnum) *ProductCategory {
	this := ProductCategory{}
	this.ProductCategory = productCategory
	return &this
}

// NewProductCategoryWithDefaults instantiates a new ProductCategory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductCategoryWithDefaults() *ProductCategory {
	this := ProductCategory{}
	return &this
}

// GetProductCategory returns the ProductCategory field value
func (o *ProductCategory) GetProductCategory() ProductCategoryEnum {
	if o == nil {
		var ret ProductCategoryEnum
		return ret
	}

	return o.ProductCategory
}

// GetProductCategoryOk returns a tuple with the ProductCategory field value
// and a boolean to check if the value has been set.
func (o *ProductCategory) GetProductCategoryOk() (*ProductCategoryEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductCategory, true
}

// SetProductCategory sets field value
func (o *ProductCategory) SetProductCategory(v ProductCategoryEnum) {
	o.ProductCategory = v
}

// GetProductCategoryDescription returns the ProductCategoryDescription field value if set, zero value otherwise.
func (o *ProductCategory) GetProductCategoryDescription() string {
	if o == nil || o.ProductCategoryDescription == nil {
		var ret string
		return ret
	}
	return *o.ProductCategoryDescription
}

// GetProductCategoryDescriptionOk returns a tuple with the ProductCategoryDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductCategory) GetProductCategoryDescriptionOk() (*string, bool) {
	if o == nil || o.ProductCategoryDescription == nil {
		return nil, false
	}
	return o.ProductCategoryDescription, true
}

// HasProductCategoryDescription returns a boolean if a field has been set.
func (o *ProductCategory) HasProductCategoryDescription() bool {
	if o != nil && o.ProductCategoryDescription != nil {
		return true
	}

	return false
}

// SetProductCategoryDescription gets a reference to the given string and assigns it to the ProductCategoryDescription field.
func (o *ProductCategory) SetProductCategoryDescription(v string) {
	o.ProductCategoryDescription = &v
}

func (o ProductCategory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["productCategory"] = o.ProductCategory
	}
	if o.ProductCategoryDescription != nil {
		toSerialize["productCategoryDescription"] = o.ProductCategoryDescription
	}
	return json.Marshal(toSerialize)
}

type NullableProductCategory struct {
	value *ProductCategory
	isSet bool
}

func (v NullableProductCategory) Get() *ProductCategory {
	return v.value
}

func (v *NullableProductCategory) Set(val *ProductCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableProductCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableProductCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductCategory(val *ProductCategory) *NullableProductCategory {
	return &NullableProductCategory{value: val, isSet: true}
}

func (v NullableProductCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
