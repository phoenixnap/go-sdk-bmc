/*
Networks API

Create, list, edit and delete public/private networks with the Network API. Use public networks to place multiple  servers on the same network or VLAN. Assign new servers with IP addresses from the same CIDR range. Use private  networks to avoid unnecessary egress data charges. Model your networks according to your business needs.<br> <br> <span class='pnap-api-knowledge-base-link'> Helpful knowledge base articles are available for  <a href='https://phoenixnap.com/kb/bmc-server-management-via-api#multi-private-backend-network-api' target='_blank'>multi-private backend networks</a>,  <a href='https://phoenixnap.com/kb/bmc-server-management-via-api#ftoc-heading-15' target='_blank'>public networks</a> and <a href='https://phoenixnap.com/kb/border-gateway-protocol-bmc' target='_blank'>border gateway protocol peer groups</a>. </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/networks/v1/)</b>

API version: 1.0
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkapi

import (
	"encoding/json"
)

// checks if the BgpPeerGroupPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpPeerGroupPatch{}

// BgpPeerGroupPatch Update a BGP Peer Group.
type BgpPeerGroupPatch struct {
	// The BGP Peer Group ASN.
	Asn *int64 `json:"asn,omitempty"`
	// The BGP Peer Group password.
	Password *string `json:"password,omitempty"`
	// The Advertised routes for the BGP Peer Group. Can have one of the following values: `DEFAULT` and `NONE`.
	AdvertisedRoutes     *string `json:"advertisedRoutes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BgpPeerGroupPatch BgpPeerGroupPatch

// NewBgpPeerGroupPatch instantiates a new BgpPeerGroupPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpPeerGroupPatch() *BgpPeerGroupPatch {
	this := BgpPeerGroupPatch{}
	return &this
}

// NewBgpPeerGroupPatchWithDefaults instantiates a new BgpPeerGroupPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpPeerGroupPatchWithDefaults() *BgpPeerGroupPatch {
	this := BgpPeerGroupPatch{}
	return &this
}

// GetAsn returns the Asn field value if set, zero value otherwise.
func (o *BgpPeerGroupPatch) GetAsn() int64 {
	if o == nil || IsNil(o.Asn) {
		var ret int64
		return ret
	}
	return *o.Asn
}

// GetAsnOk returns a tuple with the Asn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpPeerGroupPatch) GetAsnOk() (*int64, bool) {
	if o == nil || IsNil(o.Asn) {
		return nil, false
	}
	return o.Asn, true
}

// HasAsn returns a boolean if a field has been set.
func (o *BgpPeerGroupPatch) HasAsn() bool {
	if o != nil && !IsNil(o.Asn) {
		return true
	}

	return false
}

// SetAsn gets a reference to the given int64 and assigns it to the Asn field.
func (o *BgpPeerGroupPatch) SetAsn(v int64) {
	o.Asn = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *BgpPeerGroupPatch) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpPeerGroupPatch) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *BgpPeerGroupPatch) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *BgpPeerGroupPatch) SetPassword(v string) {
	o.Password = &v
}

// GetAdvertisedRoutes returns the AdvertisedRoutes field value if set, zero value otherwise.
func (o *BgpPeerGroupPatch) GetAdvertisedRoutes() string {
	if o == nil || IsNil(o.AdvertisedRoutes) {
		var ret string
		return ret
	}
	return *o.AdvertisedRoutes
}

// GetAdvertisedRoutesOk returns a tuple with the AdvertisedRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpPeerGroupPatch) GetAdvertisedRoutesOk() (*string, bool) {
	if o == nil || IsNil(o.AdvertisedRoutes) {
		return nil, false
	}
	return o.AdvertisedRoutes, true
}

// HasAdvertisedRoutes returns a boolean if a field has been set.
func (o *BgpPeerGroupPatch) HasAdvertisedRoutes() bool {
	if o != nil && !IsNil(o.AdvertisedRoutes) {
		return true
	}

	return false
}

// SetAdvertisedRoutes gets a reference to the given string and assigns it to the AdvertisedRoutes field.
func (o *BgpPeerGroupPatch) SetAdvertisedRoutes(v string) {
	o.AdvertisedRoutes = &v
}

func (o BgpPeerGroupPatch) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpPeerGroupPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Asn) {
		toSerialize["asn"] = o.Asn
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.AdvertisedRoutes) {
		toSerialize["advertisedRoutes"] = o.AdvertisedRoutes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpPeerGroupPatch) UnmarshalJSON(data []byte) (err error) {
	varBgpPeerGroupPatch := _BgpPeerGroupPatch{}

	err = json.Unmarshal(data, &varBgpPeerGroupPatch)

	if err != nil {
		return err
	}

	*o = BgpPeerGroupPatch(varBgpPeerGroupPatch)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "asn")
		delete(additionalProperties, "password")
		delete(additionalProperties, "advertisedRoutes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpPeerGroupPatch struct {
	value *BgpPeerGroupPatch
	isSet bool
}

func (v NullableBgpPeerGroupPatch) Get() *BgpPeerGroupPatch {
	return v.value
}

func (v *NullableBgpPeerGroupPatch) Set(val *BgpPeerGroupPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpPeerGroupPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpPeerGroupPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpPeerGroupPatch(val *BgpPeerGroupPatch) *NullableBgpPeerGroupPatch {
	return &NullableBgpPeerGroupPatch{value: val, isSet: true}
}

func (v NullableBgpPeerGroupPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpPeerGroupPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
