/*
Networks API

Create, list, edit and delete public/private networks with the Network API. Use public networks to place multiple  servers on the same network or VLAN. Assign new servers with IP addresses from the same CIDR range. Use private  networks to avoid unnecessary egress data charges. Model your networks according to your business needs.<br> <br> <span class='pnap-api-knowledge-base-link'> Helpful knowledge base articles are available for  <a href='https://phoenixnap.com/kb/bmc-server-management-via-api#multi-private-backend-network-api' target='_blank'>multi-private backend networks</a> and <a href='https://phoenixnap.com/kb/bmc-server-management-via-api#ftoc-heading-15' target='_blank'>public networks</a>. </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/networks/v1/)</b>

API version: 1.0
Contact: support@phoenixnap.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package networkapi

import (
	"encoding/json"
	"time"
)

// PrivateNetwork Private Network details.
type PrivateNetwork struct {
	// The private network identifier.
	Id string `json:"id"`
	// The friendly name of this private network.
	Name string `json:"name"`
	// The description of this private network.
	Description *string `json:"description,omitempty"`
	// The VLAN of this private network.
	VlanId int32 `json:"vlanId"`
	// The type of the private network.
	Type string `json:"type"`
	// The location of this private network.
	Location string `json:"location"`
	// Identifies network as the default private network for the specified location.
	LocationDefault bool `json:"locationDefault"`
	// IP range associated with this private network in CIDR notation.
	Cidr *string `json:"cidr,omitempty"`
	// Deprecated
	Servers []PrivateNetworkServer `json:"servers"`
	// A list of resources that are members of this private network.
	Memberships []NetworkMembership `json:"memberships"`
	// The status of the private network. Can have one of the following values: `BUSY` or `READY`.
	Status string `json:"status"`
	// Date and time when this private network was created.
	CreatedOn time.Time `json:"createdOn"`
}

// NewPrivateNetwork instantiates a new PrivateNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateNetwork(id string, name string, vlanId int32, type_ string, location string, locationDefault bool, servers []PrivateNetworkServer, memberships []NetworkMembership, status string, createdOn time.Time) *PrivateNetwork {
	this := PrivateNetwork{}
	this.Id = id
	this.Name = name
	this.VlanId = vlanId
	this.Type = type_
	this.Location = location
	this.LocationDefault = locationDefault
	this.Servers = servers
	this.Memberships = memberships
	this.Status = status
	this.CreatedOn = createdOn
	return &this
}

// NewPrivateNetworkWithDefaults instantiates a new PrivateNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateNetworkWithDefaults() *PrivateNetwork {
	this := PrivateNetwork{}
	return &this
}

// GetId returns the Id field value
func (o *PrivateNetwork) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PrivateNetwork) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PrivateNetwork) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *PrivateNetwork) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PrivateNetwork) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PrivateNetwork) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PrivateNetwork) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateNetwork) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PrivateNetwork) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PrivateNetwork) SetDescription(v string) {
	o.Description = &v
}

// GetVlanId returns the VlanId field value
func (o *PrivateNetwork) GetVlanId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value
// and a boolean to check if the value has been set.
func (o *PrivateNetwork) GetVlanIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VlanId, true
}

// SetVlanId sets field value
func (o *PrivateNetwork) SetVlanId(v int32) {
	o.VlanId = v
}

// GetType returns the Type field value
func (o *PrivateNetwork) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PrivateNetwork) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PrivateNetwork) SetType(v string) {
	o.Type = v
}

// GetLocation returns the Location field value
func (o *PrivateNetwork) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *PrivateNetwork) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *PrivateNetwork) SetLocation(v string) {
	o.Location = v
}

// GetLocationDefault returns the LocationDefault field value
func (o *PrivateNetwork) GetLocationDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.LocationDefault
}

// GetLocationDefaultOk returns a tuple with the LocationDefault field value
// and a boolean to check if the value has been set.
func (o *PrivateNetwork) GetLocationDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocationDefault, true
}

// SetLocationDefault sets field value
func (o *PrivateNetwork) SetLocationDefault(v bool) {
	o.LocationDefault = v
}

// GetCidr returns the Cidr field value if set, zero value otherwise.
func (o *PrivateNetwork) GetCidr() string {
	if o == nil || o.Cidr == nil {
		var ret string
		return ret
	}
	return *o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateNetwork) GetCidrOk() (*string, bool) {
	if o == nil || o.Cidr == nil {
		return nil, false
	}
	return o.Cidr, true
}

// HasCidr returns a boolean if a field has been set.
func (o *PrivateNetwork) HasCidr() bool {
	if o != nil && o.Cidr != nil {
		return true
	}

	return false
}

// SetCidr gets a reference to the given string and assigns it to the Cidr field.
func (o *PrivateNetwork) SetCidr(v string) {
	o.Cidr = &v
}

// GetServers returns the Servers field value
// Deprecated
func (o *PrivateNetwork) GetServers() []PrivateNetworkServer {
	if o == nil {
		var ret []PrivateNetworkServer
		return ret
	}

	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *PrivateNetwork) GetServersOk() ([]PrivateNetworkServer, bool) {
	if o == nil {
		return nil, false
	}
	return o.Servers, true
}

// SetServers sets field value
// Deprecated
func (o *PrivateNetwork) SetServers(v []PrivateNetworkServer) {
	o.Servers = v
}

// GetMemberships returns the Memberships field value
func (o *PrivateNetwork) GetMemberships() []NetworkMembership {
	if o == nil {
		var ret []NetworkMembership
		return ret
	}

	return o.Memberships
}

// GetMembershipsOk returns a tuple with the Memberships field value
// and a boolean to check if the value has been set.
func (o *PrivateNetwork) GetMembershipsOk() ([]NetworkMembership, bool) {
	if o == nil {
		return nil, false
	}
	return o.Memberships, true
}

// SetMemberships sets field value
func (o *PrivateNetwork) SetMemberships(v []NetworkMembership) {
	o.Memberships = v
}

// GetStatus returns the Status field value
func (o *PrivateNetwork) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PrivateNetwork) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PrivateNetwork) SetStatus(v string) {
	o.Status = v
}

// GetCreatedOn returns the CreatedOn field value
func (o *PrivateNetwork) GetCreatedOn() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value
// and a boolean to check if the value has been set.
func (o *PrivateNetwork) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedOn, true
}

// SetCreatedOn sets field value
func (o *PrivateNetwork) SetCreatedOn(v time.Time) {
	o.CreatedOn = v
}

func (o PrivateNetwork) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["vlanId"] = o.VlanId
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["location"] = o.Location
	}
	if true {
		toSerialize["locationDefault"] = o.LocationDefault
	}
	if o.Cidr != nil {
		toSerialize["cidr"] = o.Cidr
	}
	if true {
		toSerialize["servers"] = o.Servers
	}
	if true {
		toSerialize["memberships"] = o.Memberships
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["createdOn"] = o.CreatedOn
	}
	return json.Marshal(toSerialize)
}

type NullablePrivateNetwork struct {
	value *PrivateNetwork
	isSet bool
}

func (v NullablePrivateNetwork) Get() *PrivateNetwork {
	return v.value
}

func (v *NullablePrivateNetwork) Set(val *PrivateNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateNetwork(val *PrivateNetwork) *NullablePrivateNetwork {
	return &NullablePrivateNetwork{value: val, isSet: true}
}

func (v NullablePrivateNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
