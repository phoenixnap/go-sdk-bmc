/*
Networks API

Testing PrivateNetworksAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package networkapi

import (
	"context"
	"testing"

	openapiclient "github.com/phoenixnap/go-sdk-bmc/networkapi"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_networkapi_PrivateNetworksAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test PrivateNetworksAPIService PrivateNetworksGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.PrivateNetworksAPI.PrivateNetworksGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PrivateNetworksAPIService PrivateNetworksNetworkIdDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var privateNetworkId string

		httpRes, err := apiClient.PrivateNetworksAPI.PrivateNetworksNetworkIdDelete(context.Background(), privateNetworkId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PrivateNetworksAPIService PrivateNetworksNetworkIdGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var privateNetworkId string

		resp, httpRes, err := apiClient.PrivateNetworksAPI.PrivateNetworksNetworkIdGet(context.Background(), privateNetworkId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PrivateNetworksAPIService PrivateNetworksNetworkIdPut", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var privateNetworkId string

		resp, httpRes, err := apiClient.PrivateNetworksAPI.PrivateNetworksNetworkIdPut(context.Background(), privateNetworkId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PrivateNetworksAPIService PrivateNetworksPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.PrivateNetworksAPI.PrivateNetworksPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
