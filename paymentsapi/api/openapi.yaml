openapi: 3.0.3
info:
  contact:
    email: support@phoenixnap.com
    name: PhoenixNAP Team
    url: https://phoenixnap.com/
  description: Payments API are currently designed to fetch Transactions only.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://phoenixnap.com/infrastructure-solutions/legal-it/privacy-shield-compliant-privacy-policy
  title: Payments API
  version: "0.1"
servers:
- url: https://api.phoenixnap.com/payments/v1
security:
- OAuth2:
  - transactions
  - transactions.read
tags:
- description: Transactions Operations
  name: Transactions
paths:
  /transactions:
    get:
      description: A paginated list of client's transactions.
      operationId: transactionsGet
      parameters:
      - description: The limit of the number of results returned. The number of records
          returned may be smaller than the limit.
        example: 25
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip in the results.
        example: 5
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Sort Given Field depending on the desired direction. Default
          sorting is descending.
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          default: DESC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - description: "If a sortField is requested, pagination will be done after sorting.\
          \ Default sorting is by date."
        explode: true
        in: query
        name: sortField
        required: false
        schema:
          default: date
          enum:
          - date
          - amount
          - status
          - cardPaymentMethodDetails.cardType
          - cardPaymentMethodDetails.lastFourDigits
          - metadata.invoiceId
          - metadata.isAutoCharge
          type: string
        style: form
      - description: From the date and time (inclusive) to filter transactions by.
        example: 2021-04-27T16:24:57.123Z
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: To the date and time (inclusive) to filter transactions by.
        example: 2021-04-29T16:24:57.123Z
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactions'
          description: A Paginated list of client's transactions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request failed due to wrong data. Please check the provided
            parameters and try again.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request failed due to invalid credentials. Please check
            the provided credentials and try again.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request failed since this resource cannot be accessed by
            the provided credentials.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request.
      security:
      - OAuth2:
        - transactions.read
      summary: Get Transactions.
      tags:
      - Transactions
  /transactions/{transactionId}:
    get:
      description: Get transaction details.
      operationId: transactionIdGet
      parameters:
      - description: The transaction identifier.
        example: 0a1b2c3d4f5g6h7i8j9k
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Transaction details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request failed due to invalid credentials. Please check
            the provided credentials and try again.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request failed since this resource cannot be accessed by
            the provided credentials.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request.
      security:
      - OAuth2:
        - transactions.read
      summary: Get Transaction.
      tags:
      - Transactions
components:
  parameters:
    pagingLimitParameter:
      description: The limit of the number of results returned. The number of records
        returned may be smaller than the limit.
      example: 25
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 100
        maximum: 1000
        minimum: 1
        type: integer
      style: form
    pagingOffsetParameter:
      description: The number of items to skip in the results.
      example: 5
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
    pagingSortDirectionParameter:
      description: Sort Given Field depending on the desired direction. Default sorting
        is descending.
      explode: true
      in: query
      name: sortDirection
      required: false
      schema:
        default: DESC
        enum:
        - ASC
        - DESC
        type: string
      style: form
    pagingSortFieldParameter:
      description: "If a sortField is requested, pagination will be done after sorting.\
        \ Default sorting is by date."
      explode: true
      in: query
      name: sortField
      required: false
      schema:
        default: date
        enum:
        - date
        - amount
        - status
        - cardPaymentMethodDetails.cardType
        - cardPaymentMethodDetails.lastFourDigits
        - metadata.invoiceId
        - metadata.isAutoCharge
        type: string
      style: form
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request failed due to wrong data. Please check the provided
        parameters and try again.
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request failed due to invalid credentials. Please check the
        provided credentials and try again.
    Forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request failed since this resource cannot be accessed by the
        provided credentials.
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The server encountered an unexpected condition that prevented it
        from fulfilling the request.
  schemas:
    PaginatedTransactions:
      allOf:
      - $ref: '#/components/schemas/PaginatedResponse'
      example:
        results:
        - date: 2023-04-27T16:24:57.123Z
          amount: 10.99
          metadata:
            isAutoCharge: true
            invoiceNumber: 1234-4321
            invoiceId: "3088561"
          cardPaymentMethodDetails:
            lastFourDigits: "5666"
            cardType: VISA
          details: Transaction failed due to credit card expiration.
          currency: USD
          id: 60ffafcdffb8b074c7968faf
          status: FAILED
        - date: 2023-04-27T16:24:57.123Z
          amount: 10.99
          metadata:
            isAutoCharge: true
            invoiceNumber: 1234-4321
            invoiceId: "3088561"
          cardPaymentMethodDetails:
            lastFourDigits: "5666"
            cardType: VISA
          details: Transaction failed due to credit card expiration.
          currency: USD
          id: 60ffafcdffb8b074c7968faf
          status: FAILED
      properties:
        results:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
      required:
      - results
      type: object
    Transaction:
      description: Transaction response model.
      example:
        date: 2023-04-27T16:24:57.123Z
        amount: 10.99
        metadata:
          isAutoCharge: true
          invoiceNumber: 1234-4321
          invoiceId: "3088561"
        cardPaymentMethodDetails:
          lastFourDigits: "5666"
          cardType: VISA
        details: Transaction failed due to credit card expiration.
        currency: USD
        id: 60ffafcdffb8b074c7968faf
        status: FAILED
      properties:
        id:
          description: The Transaction ID.
          example: 60ffafcdffb8b074c7968faf
          type: string
        status:
          description: "The Transaction status. Status may be: SUCCESS, PROCESSING,\
            \ FAILED"
          example: FAILED
          type: string
        details:
          description: Details about the transaction. Contains failure reason in case
            of failed transactions.
          example: Transaction failed due to credit card expiration.
          type: string
        amount:
          description: The transaction amount.
          example: 10.99
          type: number
        currency:
          description: The transaction currency.
          example: USD
          type: string
        date:
          description: Date and time when transaction was created.
          example: 2023-04-27T16:24:57.123Z
          format: date-time
          type: string
        metadata:
          $ref: '#/components/schemas/TransactionMetadata'
        cardPaymentMethodDetails:
          $ref: '#/components/schemas/CardPaymentMethodDetails'
      required:
      - amount
      - cardPaymentMethodDetails
      - currency
      - date
      - id
      - metadata
      - status
      type: object
    TransactionMetadata:
      description: Transaction's metadata.
      example:
        isAutoCharge: true
        invoiceNumber: 1234-4321
        invoiceId: "3088561"
      properties:
        invoiceId:
          description: The Invoice ID that this transaction pertains to.
          example: "3088561"
          type: string
        invoiceNumber:
          description: A user-friendly reference number assigned to the invoice that
            this transaction pertains to.
          example: 1234-4321
          type: string
        isAutoCharge:
          description: Whether this transaction was triggered by an auto charge or
            not.
          example: true
          type: boolean
      required:
      - invoiceId
      - isAutoCharge
      type: object
    CardPaymentMethodDetails:
      description: Card payment details of a transaction.
      example:
        lastFourDigits: "5666"
        cardType: VISA
      properties:
        cardType:
          description: "The Card Type. Supported Card Types include: VISA, MASTERCARD,\
            \ DISCOVER, JCB & AMEX."
          example: VISA
          type: string
        lastFourDigits:
          description: The last four digits of the card number.
          example: "5666"
          pattern: "\\d{4}$"
          type: string
      required:
      - cardType
      - lastFourDigits
      type: object
    PaginatedResponse:
      properties:
        limit:
          description: Maximum number of items in the page (actual returned length
            can be less).
          example: 5
          type: integer
        offset:
          description: The number of returned items skipped.
          example: 25
          type: integer
        total:
          description: The total number of records available for retrieval.
          example: 400
          format: int64
          type: integer
      required:
      - limit
      - offset
      - total
      type: object
    Error:
      properties:
        message:
          description: The description detailing the cause of the error code.
          readOnly: true
          type: string
        validationErrors:
          description: "Validation errors, if any."
          items:
            type: string
          readOnly: true
          type: array
      required:
      - message
      type: object
  securitySchemes:
    OAuth2:
      flows:
        clientCredentials:
          scopes:
            transactions: Grants full access to transactions.
            transactions.read: Grants read only access to transactions.
          tokenUrl: https://auth.phoenixnap.com/auth/realms/BMC/protocol/openid-connect/token
      type: oauth2
