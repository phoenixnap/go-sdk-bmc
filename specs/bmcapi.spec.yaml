openapi: 3.0.2
info:
  title: Bare Metal Cloud API
  description: >
    Create, power off, power on, reset, reboot, or shut down your server with
    the Bare Metal Cloud API. 

    Deprovision servers, get or edit SSH key details, assign public IPs, assign
    servers to networks and a lot more. 

    Manage your infrastructure more efficiently using just a few simple API
    calls.<br>

    <br>

    <span class='pnap-api-knowledge-base-link'>

    Knowledge base articles to help you can be found

    <a href='https://phoenixnap.com/kb/how-to-deploy-bare-metal-cloud-server'
    target='_blank'>here</a>

    </span><br>

    <br>

    <b>All URLs are relative to (https://api.phoenixnap.com/bmc/v1/)</b>
  termsOfService: >-
    https://phoenixnap.com/infrastructure-solutions/legal-it/privacy-shield-compliant-privacy-policy
  version: '0.1'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  contact:
    name: PhoenixNAP Team
    email: support@phoenixnap.com
    url: 'https://phoenixnap.com/'
security:
  - OAuth2:
      - bmc
      - bmc.read
servers:
  - url: 'https://api.phoenixnap.com/bmc/v1'
tags:
  - name: Servers
    description: Server operations
  - name: Quotas
    description: Quota operations
  - name: SSH Keys
    description: SSH Key operations
paths:
  /servers:
    get:
      tags:
        - Servers
      description: List all servers owned by account.
      summary: List servers.
      operationId: serversGet
      security:
        - OAuth2:
            - bmc.read
      parameters:
        - in: query
          name: tag
          schema:
            type: array
            items:
              type: string
          description: >-
            A list of query parameters related to tags in the form of
            tagName.tagValue
          explode: true
          example: env.dev
      responses:
        '200':
          description: List of all the servers owned by account.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Server'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Servers
      description: >-
        Create (request) new server for account. Server DNS will be configured
        to access Google's public DNS at 8.8.8.8 .
      summary: Create new server.
      operationId: serversPost
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerCreate'
            examples:
              RequiredPropertiesProvidedOnly:
                value:
                  hostname: my-server-1
                  location: PHX
                  os: ubuntu/bionic
                  type: s1.c1.small
              UserDefinedPrivateNetworkConfiguration_AllIpsProvided_DhcpFalse:
                value:
                  hostname: my-server-1
                  description: 'My custom server #1'
                  location: PHX
                  os: ubuntu/bionic
                  type: s1.c1.small
                  installDefaultSshKeys: true
                  sshKeys:
                    - >-
                      ssh-rsa
                      AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
                      user@my_ip
                  sshKeyIds:
                    - 5fa54d1e91867c03a0a7b4a4
                  reservationId: x78sdkjds879sd7cx8
                  pricingModel: HOURLY
                  networkType: PUBLIC_AND_PRIVATE
                  networkConfiguration:
                    privateNetworkConfiguration:
                      configurationType: USER_DEFINED
                      privateNetworks:
                        - id: 60f81608e2f4665962b214db
                          ips:
                            - 10.0.0.11
                            - 10.0.0.12
                          dhcp: false
                        - id: 60f93142c5c1d6082d31382a
                          ips:
                            - 10.0.0.13 - 10.0.0.17
                          dhcp: false
              NetworkConfigurationNotProvided_ImplicitlyUseOrCreateDefaultPrivateNetworkForServerProvision:
                value:
                  hostname: my-server-1
                  description: 'My custom server #1'
                  location: PHX
                  os: ubuntu/bionic
                  type: s1.c1.small
                  installDefaultSshKeys: true
                  sshKeys:
                    - >-
                      ssh-rsa
                      AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
                      user@my_ip
                  sshKeyIds:
                    - 5fa54d1e91867c03a0a7b4a4
                  reservationId: x78sdkjds879sd7cx8
                  pricingModel: HOURLY
                  networkType: PUBLIC_AND_PRIVATE
              UserDefinedIpBlockConfiguration:
                value:
                  hostname: my-server-1
                  description: 'My custom server #1'
                  location: PHX
                  os: ubuntu/bionic
                  type: s1.c1.small
                  installDefaultSshKeys: true
                  networkType: PUBLIC_AND_PRIVATE
                  sshKeys:
                    - >-
                      ssh-rsa
                      AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
                      user@my_ip
                  sshKeyIds:
                    - 5fa54d1e91867c03a0a7b4a4
                  reservationId: x78sdkjds879sd7cx8
                  pricingModel: HOURLY
                  networkConfiguration:
                    ipBlocksConfiguration:
                      configurationType: USER_DEFINED
                      ipBlocks:
                        - id: 60473a6115e34466c9f8f083
              UserDefinedIpBlockConfiguration_UserDefinedPrivateNetworkConfiguration_AllIpsProvided:
                value:
                  hostname: my-server-1
                  description: 'My custom server #1'
                  location: PHX
                  os: ubuntu/bionic
                  type: s1.c1.small
                  installDefaultSshKeys: true
                  networkType: PUBLIC_AND_PRIVATE
                  sshKeys:
                    - >-
                      ssh-rsa
                      AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
                      user@my_ip
                  sshKeyIds:
                    - 5fa54d1e91867c03a0a7b4a4
                  reservationId: x78sdkjds879sd7cx8
                  pricingModel: HOURLY
                  networkConfiguration:
                    ipBlocksConfiguration:
                      configurationType: USER_DEFINED
                      ipBlocks:
                        - id: 60473a6115e34466c9f8f083
                    privateNetworkConfiguration:
                      configurationType: USER_DEFINED
                      privateNetworks:
                        - id: 60f81608e2f4665962b214db
                          ips:
                            - 10.0.0.11
                            - 10.0.0.12
                          dhcp: false
                        - id: 60f93142c5c1d6082d31382a
                          ips:
                            - 10.0.0.13 - 10.0.0.17
                          dhcp: false
              UserDefinedPublicNetworkConfiguration:
                value:
                  hostname: my-server-1
                  description: 'My custom server #1'
                  location: PHX
                  os: ubuntu/bionic
                  type: s1.c1.small
                  installDefaultSshKeys: true
                  sshKeys:
                    - >-
                      ssh-rsa
                      AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
                      user@my_ip
                  sshKeyIds:
                    - 5fa54d1e91867c03a0a7b4a4
                  pricingModel: HOURLY
                  networkType: PUBLIC_AND_PRIVATE
                  networkConfiguration:
                    publicNetworkConfiguration:
                      publicNetworks:
                        - id: 60473c2509268bc77fd06d29
                          ips:
                            - 182.16.0.146
                            - 182.16.0.147
                        - id: 60f93142c5c1d6082d31382a
                          ips:
                            - 183.16.0.1
              UserDefinedNetworkGateway_UserDefinedPrivateNetworkConfiguration_UserDefinedPublicNetworkConfiguration:
                value:
                  hostname: my-server-1
                  description: 'My custom server #1'
                  location: PHX
                  os: ubuntu/bionic
                  type: s1.c1.small
                  installDefaultSshKeys: true
                  sshKeys:
                    - >-
                      ssh-rsa
                      AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
                      user@my_ip
                  sshKeyIds:
                    - 5fa54d1e91867c03a0a7b4a4
                  reservationId: x78sdkjds879sd7cx8
                  networkType: PUBLIC_AND_PRIVATE
                  networkConfiguration:
                    gatewayAddress: 182.16.0.145
                    privateNetworkConfiguration:
                      configurationType: USER_DEFINED
                      privateNetworks:
                        - id: 60f81608e2f4665962b214db
                          ips:
                            - 10.0.0.11
                            - 10.0.0.12
                          dhcp: false
                    publicNetworkConfiguration:
                      publicNetworks:
                        - id: 60473c2509268bc77fd06d29
                          ips:
                            - 182.16.0.146
                            - 182.16.0.147
      responses:
        '200':
          description: Request to create server is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '406':
          $ref: '#/components/responses/NotAccepted'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
    get:
      tags:
        - Servers
      description: Get server properties.
      summary: Get server.
      operationId: serversServerIdGet
      security:
        - OAuth2:
            - bmc.read
      responses:
        '200':
          description: Specific server details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      tags:
        - Servers
      description: >-
        Any changes to the hostname or description using the BMC API will
        reflect solely in the BMC API and portal. The changes are intended to
        keep the BMC data up to date with your server. We do not have access to
        your server's settings. Local changes to the server's hostname will not
        be reflected in the API or portal.
      summary: Patch a Server.
      operationId: serversServerIdPatch
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerPatch'
            example:
              description: My custom server edit
              hostname: my-server
      responses:
        '200':
          description: Updated server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Servers
      description: >-
        Deprovision specific server. Any IP blocks assigned to this server will
        also be relinquished and deleted. Deprecated: see
        /servers/{serverId}/actions/deprovision
      summary: Delete server.
      deprecated: true
      operationId: serversServerIdDelete
      security:
        - OAuth2:
            - bmc
      responses:
        '200':
          description: Deprovisioned server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}/network-configuration/ip-block-configurations/ip-blocks':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
    post:
      tags:
        - Servers
      description: >-
        Adds an IP block to this server. <b>No actual configuration is performed
        on the operating system.</b> BMC configures exclusively the networking
        devices in the datacenter infrastructure. Manual network configuration
        changes in the operating system of this server are required. Knowledge
        base article to help you can be found <a
        href='https://phoenixnap.com/kb/configure-server-with-public-ip-block#ftoc-heading-2'
        target='_blank'>here</a>.
      summary: Assign IP Block to Server.
      operationId: serversServerIdIpBlocksPost
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerIpBlock'
            example:
              id: 60473a6115e34466c9f8f083
      responses:
        '202':
          description: The specified IP block is being added to the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerIpBlock'
              example:
                id: 60473a6115e34466c9f8f083
                vlanId: 10
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}/network-configuration/ip-block-configurations/ip-blocks/{ipBlockId}':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
      - $ref: '#/components/parameters/ipBlockIdPathParam'
    delete:
      tags:
        - Servers
      description: >-
        Removes the IP block from the server. <b>No actual configuration is
        performed on the operating system.</b> BMC configures exclusively the
        networking devices in the datacenter infrastructure. Manual network
        configuration changes in the operating system of this server are
        required. <b>This is an advanced network action that can make your
        server completely unavailable over any network. Make sure this server is
        reachable over remote console for guaranteed access in case of
        misconfiguration.</b>
      summary: Unassign IP Block from Server.
      operationId: serversServerIdIpBlocksIpBlockIdDelete
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelinquishIpBlock'
            example:
              deleteIpBlocks: false
      responses:
        '202':
          description: The specified IP block is being removed from the server.
          content:
            application/json:
              schema:
                type: string
                description: The specified IP block is being removed from the server.
                example: The specified IP block is being removed from the server.
              example: The specified IP block is being removed from the server.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}/network-configuration/private-network-configuration/private-networks':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
    post:
      tags:
        - Servers
      description: >-
        Adds the server to a private network. <b>No actual configuration is
        performed on the operating system.</b> BMC configures exclusively the
        networking devices in the datacenter infrastructure. Manual network
        configuration changes in the operating system of this server are
        required. If the network contains a membership of type 'storage', the
        first twelve IPs are already reserved by BMC and not usable. These will
        return a Bad Request (400) if selected. Knowledge base article to help
        you can be found <a
        href='https://phoenixnap.com/kb/configure-bmc-server-after-adding-to-network#ftoc-heading-3'
        target='_blank'>here</a>.
      summary: Adds the server to a private network.
      operationId: serversServerIdPrivateNetworksPost
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerPrivateNetwork'
            examples:
              DhcpFalseIpsProvided:
                value:
                  id: 60473a6115e34466c9f8f083
                  ips:
                    - 10.0.0.1
                    - 10.0.0.2
                  dhcp: false
              PrivateNetworkIdProvidedOnly:
                value:
                  id: 60473a6115e34466c9f8f083
              DhcpFalseIpsNotProvided:
                value:
                  id: 60473a6115e34466c9f8f083
                  dhcp: false
              DhcpTrueIpsEmpty:
                value:
                  id: 60473a6115e34466c9f8f083
                  ips: []
                  dhcp: true
              DhcpTrueIpsNull:
                value:
                  id: 60473a6115e34466c9f8f083
                  ips: []
                  dhcp: true
              DhcpTrueIpsNotProvided:
                value:
                  id: 60473a6115e34466c9f8f083
                  dhcp: true
      responses:
        '202':
          description: The server is being added to the specified private network.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPrivateNetwork'
              examples:
                DhcpFalse:
                  value:
                    id: 60473a6115e34466c9f8f083
                    ips:
                      - 10.0.0.1
                      - 10.0.0.2
                    dhcp: false
                    statusDescription: in-progress
                DhcpTrue:
                  value:
                    id: 60473a6115e34466c9f8f083
                    ips: []
                    dhcp: true
                    statusDescription: in-progress
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}/network-configuration/private-network-configuration/private-networks/{privateNetworkId}':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
      - $ref: '#/components/parameters/privateNetworkIdPathParam'
    delete:
      tags:
        - Servers
      description: >-
        Removes the server from private network. <b>No actual configuration is
        performed on the operating system.</b> BMC configures exclusively the
        networking devices in the datacenter infrastructure. Manual network
        configuration changes in the operating system of this server are
        required. <b>This is an advanced network action that can make your
        server completely unavailable over any network. Make sure this server is
        reachable over remote console for guaranteed access in case of
        misconfiguration.</b>
      summary: Removes the server from private network.
      security:
        - OAuth2:
            - bmc
      operationId: deletePrivateNetwork
      responses:
        '202':
          description: The server is being removed from the specified private network.
          content:
            application/json:
              schema:
                type: string
                description: >-
                  The server is being removed from the specified private
                  network.
                example: >-
                  The server is being removed from the specified private
                  network.
              example: The server is being removed from the specified private network.
  '/servers/{serverId}/network-configuration/public-network-configuration/public-networks':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
    post:
      tags:
        - Servers
      description: >-
        Adds the server to a Public Network. <b>No actual configuration is
        performed on the operating system.</b> BMC configures exclusively the
        networking devices in the datacenter infrastructure. Manual network
        configuration changes in the operating system of this server are
        required. Knowledge base article to help you can be found <a
        href='https://phoenixnap.com/kb/configure-bmc-server-after-adding-to-network#ftoc-heading-3'
        target='_blank'>here</a>.
      summary: Adds the server to a Public Network.
      operationId: serversServerIdPublicNetworksPost
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerPublicNetwork'
            example:
              id: 60473c2509268bc77fd06d29
              ips:
                - 182.16.0.146
                - 182.16.0.147
      responses:
        '202':
          description: The server is being added to the specified Public Network.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPublicNetwork'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}/network-configuration/public-network-configuration/public-networks/{publicNetworkId}':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
      - $ref: '#/components/parameters/publicNetworkIdPathParam'
    delete:
      tags:
        - Servers
      description: >-
        Removes the server from the Public Network. <b>No actual configuration
        is performed on the operating system.</b> BMC configures exclusively the
        networking devices in the datacenter infrastructure. Manual network
        configuration changes in the operating system of this server are
        required. <b>This is an advanced network action that can make your
        server completely unavailable over any network. Make sure this server is
        reachable over remote console for guaranteed access in case of
        misconfiguration.</b>
      summary: Removes the server from the Public Network
      operationId: serversServerIdPublicNetworksDelete
      security:
        - OAuth2:
            - bmc
      responses:
        '202':
          description: The server is being removed from the specified Public Network.
          content:
            application/json:
              schema:
                type: string
                description: The server is being removed from the specified Public Network.
                example: The server is being removed from the specified Public Network.
              example: The server is being removed from the specified Public Network.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}/tags':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
    put:
      tags:
        - Servers
      description: >-
        Overwrites tags assigned for Server and unassigns any tags not part of
        the request.
      summary: Overwrite tags assigned for Server.
      operationId: serversServerIdTagsPut
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TagAssignmentRequest'
      responses:
        '200':
          description: Server tags set.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}/actions/deprovision':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
    post:
      tags:
        - Servers
      description: Deprovision the server. Supports advanced deprovision configuration.
      summary: Deprovision a server.
      operationId: serversServerIdActionsDeprovisionPost
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelinquishIpBlock'
            example:
              deleteIpBlocks: false
      responses:
        '202':
          description: >-
            The server has been deprovisioned and related network setup is being
            updated.
          content:
            application/json:
              schema:
                type: string
                description: >-
                  The server has been deprovisioned and related network setup is
                  being updated.
                example: >-
                  The server has been deprovisioned and related network setup is
                  being updated.
              example: >-
                The server has been deprovisioned and related network setup is
                being updated.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}/actions/power-on':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
    post:
      tags:
        - Servers
      description: Power on specific server.
      summary: Power on server.
      operationId: serversServerIdActionsPowerOnPost
      security:
        - OAuth2:
            - bmc
      responses:
        '200':
          description: Powering on server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}/actions/power-off':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
    post:
      tags:
        - Servers
      description: Power off specific server.
      summary: Power off server.
      operationId: serversServerIdActionsPowerOffPost
      security:
        - OAuth2:
            - bmc
      responses:
        '200':
          description: Powering off server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}/actions/reboot':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
    post:
      tags:
        - Servers
      description: Reboot specific server.
      summary: Reboot server.
      operationId: serversServerIdActionsRebootPost
      security:
        - OAuth2:
            - bmc
      responses:
        '200':
          description: Rebooting server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}/actions/shutdown':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
    post:
      tags:
        - Servers
      description: Shut down specific server.
      summary: Shutdown server.
      operationId: serversServerIdActionsShutdownPost
      security:
        - OAuth2:
            - bmc
      responses:
        '200':
          description: Shutting down server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}/actions/reset':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
    post:
      tags:
        - Servers
      description: >-
        Deprecated: Reset specific server. Reset only supports network
        configurations of type 'private network' or 'IP blocks'. As an
        alternative, the suggested action is to deprovision the server and
        provision a new one with the same configuration.
      summary: Reset server.
      deprecated: true
      operationId: serversServerIdActionsResetPost
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerReset'
            example:
              installDefaultSshKeys: true
              sshKeys:
                - >-
                  ssh-rsa
                  AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
                  user@my_ip
              sshKeyIds:
                - 5fa54d1e91867c03a0a7b4a4
      responses:
        '200':
          description: Resetting server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/servers/{serverId}/actions/reserve':
    parameters:
      - $ref: '#/components/parameters/serverIdPathParam'
    post:
      tags:
        - Servers
      description: Reserve specific server.
      summary: Reserve server.
      operationId: serversServerIdActionsReservePost
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerReserve'
            example:
              pricingModel: ONE_MONTH_RESERVATION
      responses:
        '200':
          description: Reserved server details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /ssh-keys:
    post:
      tags:
        - SSH Keys
      description: >-
        Create an SSH Key. SSH Keys created can be used for server creation and
        reset functionality.
      summary: Create SSH Key.
      operationId: sshKeysPost
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SshKeyCreate'
            example:
              name: my-sshkey-01
              default: false
              key: >-
                ssh-rsa
                AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
                user@my_ip
      responses:
        '201':
          description: SSH Key successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshKey'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - SSH Keys
      description: List all SSH Keys.
      summary: List SSH Keys.
      operationId: sshKeysGet
      security:
        - OAuth2:
            - bmc.read
      responses:
        '200':
          description: List of all the SSH Keys owned by account.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SshKey'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/ssh-keys/{sshKeyId}':
    parameters:
      - in: path
        name: sshKeyId
        required: true
        schema:
          type: string
        description: The SSH Key's ID.
        example: 5fa54d1e91867c03a0a7b4a4
    get:
      tags:
        - SSH Keys
      description: Get SSH Key details.
      summary: Get SSH Key.
      operationId: sshKeysSshKeyIdGet
      security:
        - OAuth2:
            - bmc.read
      responses:
        '200':
          description: Specific SSH Key details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshKey'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - SSH Keys
      description: Delete an SSH Key.
      summary: Delete SSH Key.
      operationId: sshKeysSshKeyIdDelete
      security:
        - OAuth2:
            - bmc
      responses:
        '200':
          description: SSH Key deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSshKeyResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - SSH Keys
      description: Edit SSH Key details.
      summary: Edit SSH Key.
      operationId: sshKeysSshKeyIdPut
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SshKeyUpdate'
            example:
              name: my-sshkey-01
              default: false
      responses:
        '200':
          description: Specific SSH Key details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshKey'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /quotas:
    get:
      tags:
        - Quotas
      description: Get account quota details.
      summary: List quotas
      operationId: quotasGet
      security:
        - OAuth2:
            - bmc.read
      responses:
        '200':
          description: Specific account quota details.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quota'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/quotas/{quotaId}':
    parameters:
      - in: path
        name: quotaId
        required: true
        schema:
          type: string
        description: The ID of the Quota.
        example: bmc.servers.max_count
    get:
      tags:
        - Quotas
      description: Get account quota details.
      summary: Get a quota.
      operationId: quotasQuotaIdGet
      security:
        - OAuth2:
            - bmc.read
      responses:
        '200':
          description: Specific account quota details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quota'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/quotas/{quotaId}/actions/request-edit':
    parameters:
      - in: path
        name: quotaId
        required: true
        schema:
          type: string
        description: The ID of the Quota.
        example: bmc.servers.max_count
    post:
      tags:
        - Quotas
      description: Sends a request to edit the limit of a quota.
      summary: Request quota limit change.
      operationId: quotasQuotaIdActionsRequestEditPost
      security:
        - OAuth2:
            - bmc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaEditLimitRequest'
      responses:
        '202':
          description: Accepted request for editing the limit.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: >-
            https://auth.phoenixnap.com/auth/realms/BMC/protocol/openid-connect/token
          scopes:
            bmc: Grants full access to bmc-api.
            bmc.read: Grants read only access to bmc-api.
  schemas:
    TagAssignment:
      type: object
      description: Tag assigned to resource.
      required:
        - id
        - name
        - isBillingTag
      properties:
        id:
          description: The unique id of the tag.
          type: string
          example: 60ffafcdffb8b074c7968dad
        name:
          description: The name of the tag.
          type: string
          example: Environment
        value:
          description: The value of the tag assigned to the resource.
          type: string
          example: PROD
        isBillingTag:
          description: Whether or not to show the tag as part of billing and invoices
          type: boolean
          example: true
        createdBy:
          description: Who the tag was created by.
          type: string
          enum:
            - USER
            - SYSTEM
    OsConfiguration:
      type: object
      description: OS specific configuration properties.
      properties:
        windows:
          description: Windows OS configuration properties.
          type: object
          properties:
            rdpAllowedIps:
              description: >-
                List of IPs allowed for RDP access to Windows OS. Supported in
                single IP, CIDR and range format. When undefined, RDP is
                disabled. To allow RDP access from any IP use 0.0.0.0/0. This
                will only be returned in response to provisioning a server.
              type: array
              items:
                type: string
                example: 172.217.22.14
              minItems: 1
              example:
                - 172.217.22.14
                - 10.111.14.40/29
                - 10.111.14.66 - 10.111.14.71
        rootPassword:
          description: >-
            Password set for user root on an ESXi server which will only be
            returned in response to provisioning a server.
          type: string
          example: MyP@ssw0rd_01
          readOnly: true
        managementUiUrl:
          description: >-
            The URL of the management UI which will only be returned in response
            to provisioning a server.
          type: string
          example: 'https://172.217.22.14'
          readOnly: true
        managementAccessAllowedIps:
          description: >-
            List of IPs allowed to access the Management UI. Supported in single
            IP, CIDR and range format. When undefined, Management UI is
            disabled. This will only be returned in response to provisioning a
            server.
          type: array
          items:
            type: string
            example: 172.217.22.14
          minItems: 1
          example:
            - 172.217.22.14
            - 10.111.14.40/29
            - 10.111.14.66 - 10.111.14.71
        installOsToRam:
          description: >-
            If true, OS will be installed to and booted from the server's RAM.
            On restart RAM OS will be lost and the server will not be reachable
            unless a custom bootable OS has been deployed. Only supported for
            ubuntu/focal.
          type: boolean
          default: false
        cloudInit:
          type: object
          description: Details for cloud-init configuration.
          properties:
            userData:
              description: >-
                User data for cloud init configuration in base64 encoding.
                NoCloud format is supported.
              type: string
              format: byte
              writeOnly: true
    ServerPrivateNetwork:
      type: object
      description: Private network details of bare metal server.
      required:
        - id
      properties:
        id:
          description: The network identifier.
          type: string
          example: 603f3b2cfcaf050643b89a4b
        ips:
          description: >-
            IPs to configure/configured on the server. Should be null or empty
            list if DHCP is true. If the network contains a membership of type
            'storage', the first twelve IPs are already reserved by BMC and not
            usable. These will return a Bad Request (400) if selected.
          type: array
          maxItems: 10
          items:
            type: string
            example: 10.1.1.1
          example:
            - 10.1.1.1
            - 10.1.1.2
        dhcp:
          description: >-
            Determines whether DHCP is enabled for this server. Should be false
            if ips is not an empty list. Not supported for proxmox OS.
          type: boolean
          default: false
          example: false
        statusDescription:
          description: The status of the network.
          readOnly: true
          type: string
          example: assigned
    PrivateNetworkConfiguration:
      type: object
      description: Private network details of bare metal server.
      properties:
        gatewayAddress:
          description: >-
            The address of the gateway assigned / to assign to the server. When
            used as part of request body, it has to match one of the IP
            addresses used in the existing assigned private networks for the
            relevant location. Deprecated in favour of a common gateway address
            across all networks available under NetworkConfiguration.
          deprecated: true
          type: string
          example: 10.0.0.10
        configurationType:
          description: >-
            Determines the approach for configuring private network(s) for the
            server being provisioned. Currently this field should be set to
            `USE_OR_CREATE_DEFAULT` or `USER_DEFINED`.
          type: string
          writeOnly: true
          default: USE_OR_CREATE_DEFAULT
          example: USER_DEFINED
        privateNetworks:
          description: >-
            The list of private networks this server is member of. When this
            field is part of request body, it'll be used to specify the private
            networks to assign to this server upon provisioning. Used alongside
            the `USER_DEFINED` configurationType.
          type: array
          items:
            $ref: '#/components/schemas/ServerPrivateNetwork'
          example:
            - id: 60f81608e2f4665962b214db
              ips:
                - 10.0.0.11 - 10.0.0.15
              dhcp: false
            - id: 60f93142c5c1d6082d31382a
              ips:
                - 10.0.0.16
                - 10.0.0.17
              dhcp: false
    ServerIpBlock:
      type: object
      description: IP block assigned to server
      required:
        - id
      properties:
        id:
          description: The IP block's ID.
          type: string
          example: 60473a6115e34466c9f8f083
        vlanId:
          readOnly: true
          description: >-
            The VLAN on which this IP block has been configured within the
            network switch.
          type: integer
          example: 10
    IpBlocksConfiguration:
      type: object
      description: >-
        The IP blocks to assign to this server. <b>This is an exclusive
        allocation</b>, i.e. the IP blocks cannot be shared with other servers.
        If IpBlocksConfiguration is not defined, the purchase of a new IP block
        is determined by the networkType field.
      properties:
        configurationType:
          description: >-
            Determines the approach for configuring IP blocks for the server
            being provisioned. If PURCHASE_NEW is selected, the smallest
            supported range, depending on the operating system, is allocated to
            the server.
          writeOnly: true
          type: string
          enum:
            - PURCHASE_NEW
            - USER_DEFINED
            - NONE
          default: PURCHASE_NEW
        ipBlocks:
          description: >-
            Used to specify the previously purchased IP blocks to assign to this
            server upon provisioning. Used alongside the USER_DEFINED
            configurationType.
          type: array
          maxItems: 1
          items:
            $ref: '#/components/schemas/ServerIpBlock'
    ServerPublicNetwork:
      type: object
      description: Public network details of bare metal server.
      required:
        - id
        - ips
      properties:
        id:
          description: The network identifier.
          type: string
          example: 60473c2509268bc77fd06d29
        ips:
          description: >-
            IPs to configure/configured on the server. IPs must be within the
            network's range.
          type: array
          items:
            type: string
            example: 182.16.0.146
          minItems: 1
          example:
            - 182.16.0.146
            - 182.16.0.147
        statusDescription:
          description: The status of the assignment to the network.
          readOnly: true
          type: string
          example: assigned
    PublicNetworkConfiguration:
      type: object
      description: Public network details of bare metal server.
      properties:
        publicNetworks:
          description: >-
            The list of public networks this server is member of. When this
            field is part of request body, it'll be used to specify the public
            networks to assign to this server upon provisioning.
          type: array
          items:
            $ref: '#/components/schemas/ServerPublicNetwork'
          example:
            - id: 60473c2509268bc77fd06d29
              ips:
                - 182.16.0.146
                - 182.16.0.147
            - id: 60f93142c5c1d6082d31382a
              ips:
                - 183.16.0.1
    NetworkConfiguration:
      type: object
      description: Entire network details of bare metal server.
      properties:
        gatewayAddress:
          description: >-
            The address of the gateway assigned / to assign to the server. When
            used as part of request body, IP address has to be part of
            private/public network assigned to this server.
          type: string
          example: 182.16.0.145
        privateNetworkConfiguration:
          $ref: '#/components/schemas/PrivateNetworkConfiguration'
        ipBlocksConfiguration:
          $ref: '#/components/schemas/IpBlocksConfiguration'
        publicNetworkConfiguration:
          $ref: '#/components/schemas/PublicNetworkConfiguration'
    Server:
      type: object
      description: Bare metal server.
      required:
        - id
        - status
        - hostname
        - os
        - type
        - location
        - cpu
        - cpuCount
        - coresPerCpu
        - cpuFrequency
        - ram
        - storage
        - privateIpAddresses
        - pricingModel
        - networkConfiguration
      properties:
        id:
          description: The unique identifier of the server.
          type: string
          example: x78sdkjds879sd7cx8
        status:
          description: The status of the server.
          type: string
          example: creating
        hostname:
          description: Hostname of server.
          type: string
          example: my-server-1
          minLength: 1
          maxLength: 100
          pattern: '^(?=.*[a-zA-Z])([a-zA-Z0-9().-])+$'
        description:
          description: Description of server.
          type: string
          example: 'Server #1 used for computing.'
          maxLength: 250
        os:
          description: >-
            The server’s OS ID used when the server was created. Currently this
            field should be set to either `ubuntu/bionic`, `ubuntu/focal`,
            `centos/centos7`, `centos/centos8`, `windows/srv2019std`,
            `windows/srv2019dc`, `esxi/esxi70u2`, `debian/bullseye` or
            `proxmox/bullseye`.
          type: string
          example: ubuntu/bionic
        type:
          description: >-
            Server type ID. Cannot be changed once a server is created.
            Currently this field should be set to either `s0.d1.small`,
            `s0.d1.medium`, `s1.c1.small`, `s1.c1.medium`, `s1.c2.medium`,
            `s1.c2.large`, `s1.e1.small`, `s1.e1.medium`, `s1.e1.large`,
            `s2.c1.small`, `s2.c1.medium`, `s2.c1.large`, `s2.c2.small`,
            `s2.c2.medium`, `s2.c2.large`, `d1.c1.small`, `d1.c2.small`,
            `d1.c3.small`, `d1.c4.small`, `d1.c1.medium`, `d1.c2.medium`,
            `d1.c3.medium`, `d1.c4.medium`, `d1.c1.large`, `d1.c2.large`,
            `d1.c3.large`, `d1.c4.large`, `d1.m1.medium`, `d1.m2.medium`,
            `d1.m3.medium`, `d1.m4.medium`, `d2.c1.medium`, `d2.c2.medium`,
            `d2.c3.medium`, `d2.c4.medium`, `d2.c5.medium`, `d2.c1.large`,
            `d2.c2.large`, `d2.c3.large`, `d2.c4.large`, `d2.c5.large`,
            `d2.m1.medium`, `d2.m1.large`, `d2.m2.medium`, `d2.m2.large`,
            `d2.m2.xlarge` or `d2.c4.storage.pliops1`.
          type: string
          example: s1.c1.small
        location:
          description: >-
            Server location ID. Cannot be changed once a server is created.
            Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`,
            `CHI`, `SEA` or `AUS`.
          type: string
          example: PHX
        cpu:
          description: A description of the machine CPU.
          type: string
          example: E-2276G
        cpuCount:
          description: The number of CPUs available in the system.
          type: integer
          format: int32
          minimum: 1
          example: 2
        coresPerCpu:
          description: The number of physical cores present on each CPU.
          type: integer
          format: int32
          minimum: 1
          example: 28
        cpuFrequency:
          description: The CPU frequency in GHz.
          type: number
          minimum: 0
          example: 3.6
        ram:
          description: A description of the machine RAM.
          type: string
          example: 64GB RAM
        storage:
          description: A description of the machine storage.
          type: string
          example: 1x 960GB NVMe
        privateIpAddresses:
          description: Private IP addresses assigned to server.
          type: array
          items:
            type: string
            example: 172.16.0.1
          minItems: 1
          example:
            - 172.16.0.1
        publicIpAddresses:
          description: Public IP addresses assigned to server.
          type: array
          items:
            type: string
            example: 182.16.0.1
          minItems: 0
          example:
            - 182.16.0.1
            - 183.16.0.1
        reservationId:
          description: The reservation reference id if any.
          type: string
          example: x78sdkjds879sd7cx8
        pricingModel:
          description: >-
            The pricing model this server is being billed. Currently this field
            should be set to `HOURLY`, `ONE_MONTH_RESERVATION`,
            `TWELVE_MONTHS_RESERVATION`, `TWENTY_FOUR_MONTHS_RESERVATION` or
            `THIRTY_SIX_MONTHS_RESERVATION`.
          type: string
          default: HOURLY
          example: HOURLY
        password:
          description: >-
            Password set for user Admin on Windows server or user root on ESXi
            server which will only be returned in response to provisioning a
            server.
          type: string
          example: MyP@ssw0rd_01
        networkType:
          description: >-
            The type of network configuration for this server. Currently this
            field should be set to `PUBLIC_AND_PRIVATE` or `PRIVATE_ONLY`.
          type: string
          default: PUBLIC_AND_PRIVATE
          example: PUBLIC_AND_PRIVATE
        clusterId:
          description: The cluster reference id if any.
          type: string
          example: x78sdkjds879sd7cx8
        tags:
          description: The tags assigned if any.
          type: array
          items:
            $ref: '#/components/schemas/TagAssignment'
        provisionedOn:
          description: Date and time when server was provisioned.
          type: string
          format: date-time
          example: '2021-03-13T20:24:32.491Z'
        osConfiguration:
          $ref: '#/components/schemas/OsConfiguration'
        networkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          readOnly: true
          description: The description detailing the cause of the error code.
        validationErrors:
          type: array
          items:
            type: string
          readOnly: true
          description: 'Validation errors, if any.'
    TagAssignmentRequest:
      type: object
      description: Tag request to assign to resource.
      required:
        - name
      properties:
        name:
          description: >-
            The name of the tag. Tag names are case-sensitive, and should be
            composed of a maximum of 100 characters including UTF-8 Unicode
            letters, numbers, and the following symbols: '-', '_'. Regex:
            [A-zÀ-ú0-9_-]{1,100}.
          type: string
          example: Environment
        value:
          description: >-
            The value of the tag assigned to the resource. Tag values are
            case-sensitive, and should be composed of a maximum of 100
            characters including UTF-8 Unicode letters, numbers, and the
            following symbols: '-', '_'. Regex: [A-zÀ-ú0-9_-]{1,100}.
          type: string
          example: PROD
    ServerCreate:
      type: object
      description: Provision bare metal server.
      required:
        - hostname
        - os
        - type
        - location
      properties:
        hostname:
          description: Hostname of server.
          type: string
          example: my-server-1
          minLength: 1
          maxLength: 100
          pattern: '^(?=.*[a-zA-Z])([a-zA-Z0-9().-])+$'
        description:
          description: Description of server.
          type: string
          example: 'Server #1 used for computing.'
          maxLength: 250
        os:
          description: >-
            The server’s OS ID used when the server was created. Currently this
            field should be set to either `ubuntu/bionic`, `ubuntu/focal`,
            `centos/centos7`,`centos/centos8`, `windows/srv2019std`,
            `windows/srv2019dc`, `esxi/esxi70u2`, `debian/bullseye` or
            `proxmox/bullseye`.
          type: string
          example: ubuntu/bionic
        type:
          description: >-
            Server type ID. Cannot be changed once a server is created.
            Currently this field should be set to either `s0.d1.small`,
            `s0.d1.medium`, `s1.c1.small`, `s1.c1.medium`, `s1.c2.medium`,
            `s1.c2.large`, `s1.e1.small`, `s1.e1.medium`, `s1.e1.large`,
            `s2.c1.small`, `s2.c1.medium`, `s2.c1.large`, `s2.c2.small`,
            `s2.c2.medium`, `s2.c2.large`, `d1.c1.small`, `d1.c2.small`,
            `d1.c3.small`, `d1.c4.small`, `d1.c1.medium`, `d1.c2.medium`,
            `d1.c3.medium`, `d1.c4.medium`, `d1.c1.large`, `d1.c2.large`,
            `d1.c3.large`, `d1.c4.large`, `d1.m1.medium`, `d1.m2.medium`,
            `d1.m3.medium`, `d1.m4.medium`, `d2.c1.medium`, `d2.c2.medium`,
            `d2.c3.medium`, `d2.c4.medium`, `d2.c5.medium`, `d2.c1.large`,
            `d2.c2.large`, `d2.c3.large`, `d2.c4.large`, `d2.c5.large`,
            `d2.m1.medium`, `d2.m1.large`, `d2.m2.medium`, `d2.m2.large`,
            `d2.m2.xlarge` or `d2.c4.storage.pliops1`.
          type: string
          example: s1.c1.small
        location:
          description: >-
            Server location ID. Cannot be changed once a server is created.
            Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`,
            `CHI`, `SEA` or `AUS`.
          type: string
          example: PHX
        installDefaultSshKeys:
          description: >-
            Whether or not to install SSH keys marked as default in addition to
            any SSH keys specified in this request.
          default: true
          type: boolean
          example: false
        sshKeys:
          description: A list of SSH keys that will be installed on the server.
          type: array
          items:
            type: string
            example: >-
              ssh-rsa
              AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
              user@my_ip
          example:
            - >-
              ssh-rsa
              AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
              user@my_ip
        sshKeyIds:
          description: >-
            A list of SSH key IDs that will be installed on the server in
            addition to any SSH keys specified in this request.
          type: array
          items:
            type: string
            example: 5fa942e71c16abcfbead275f
          example:
            - 5fa942e71c16abcfbead275f
            - 5fa94303cc6dc49346404fca
            - 5fa943127bda760ad80c237e
        reservationId:
          description: Server reservation ID.
          type: string
          example: 5f622c8032b458306b40d824
        pricingModel:
          description: >-
            Server pricing model. Currently this field should be set to
            `HOURLY`, `ONE_MONTH_RESERVATION`, `TWELVE_MONTHS_RESERVATION`,
            `TWENTY_FOUR_MONTHS_RESERVATION` or `THIRTY_SIX_MONTHS_RESERVATION`.
          type: string
          default: HOURLY
          example: ONE_MONTH_RESERVATION
        networkType:
          description: >-
            The type of network configuration for this server. Currently this
            field should be set to `PUBLIC_AND_PRIVATE` or `PRIVATE_ONLY`.
          type: string
          default: PUBLIC_AND_PRIVATE
          example: PUBLIC_AND_PRIVATE
        osConfiguration:
          $ref: '#/components/schemas/OsConfiguration'
        tags:
          description: >-
            Tags to set to the server. To create a new tag or list all the
            existing tags that you can use, refer to [Tags
            API](https://developers.phoenixnap.com/docs/tags/1/overview).
          type: array
          items:
            $ref: '#/components/schemas/TagAssignmentRequest'
        networkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
    DeleteResult:
      type: object
      description: Result of a successful delete action.
      required:
        - result
        - serverId
      properties:
        result:
          description: Server has been deleted.
          type: string
          example: Server has been deleted.
        serverId:
          description: The unique identifier of the server.
          type: string
          example: x78sdkjds879sd7cx8
    ServerPatch:
      type: object
      description: Server patch.
      properties:
        description:
          description: Description of server.
          type: string
          example: 'Server #1 used for computing.'
          maxLength: 250
        hostname:
          description: Hostname of server
          type: string
          example: my-server
          minLength: 1
          maxLength: 100
          pattern: '[a-zA-Z0-9().-]+'
    RelinquishIpBlock:
      type: object
      description: >-
        Object used to determine whether to relinquish ownership of the IP block
        upon server deletion.
      properties:
        deleteIpBlocks:
          description: >-
            Determines whether the IP blocks assigned to the server should be
            deleted or not.
          type: boolean
          default: false
          example: true
    ActionResult:
      type: object
      description: Result of a successful action.
      required:
        - result
      properties:
        result:
          description: Message describing the action's result.
          type: string
          example: Powering on server.
    OsConfigurationMap:
      description: OS specific configuration properties.
      type: object
      properties:
        windows:
          description: Windows OS configuration properties.
          type: object
          properties:
            rdpAllowedIps:
              description: >-
                List of IPs allowed for RDP access to Windows OS. Supported in
                single IP, CIDR and range format. When undefined, RDP is
                disabled. To allow RDP access from any IP use 0.0.0.0/0. This
                will only be returned in response to provisioning a server.
              type: array
              items:
                type: string
                example: 172.217.22.14
              minItems: 1
              example:
                - 172.217.22.14
                - 10.111.14.40/29
                - 10.111.14.66 - 10.111.14.71
        esxi:
          description: VMWare ESXi configuration properties.
          type: object
          properties:
            rootPassword:
              description: >-
                Password set for user root on an ESXi server which will only be
                returned in response to provisioning a server.
              type: string
              example: MyP@ssw0rd_01
              readOnly: true
            managementUiUrl:
              description: >-
                The URL of the management UI which will only be returned in
                response to provisioning a server.
              type: string
              example: 'https://172.217.22.14'
              readOnly: true
            managementAccessAllowedIps:
              description: >-
                List of IPs allowed to access the Management UI. Supported in
                single IP, CIDR and range format. When undefined, Management UI
                is disabled. This will only be returned in response to
                provisioning a server.
              type: array
              items:
                type: string
                example: 172.217.22.14
              minItems: 1
              example:
                - 172.217.22.14
                - 10.111.14.40/29
                - 10.111.14.66 - 10.111.14.71
        proxmox:
          description: Proxmox VE configuration properties.
          type: object
          properties:
            rootPassword:
              description: >-
                Password set for user root on a Proxmox server which will only
                be returned in response to provisioning a server.
              type: string
              example: MyP@ssw0rd_01
              readOnly: true
            managementUiUrl:
              description: >-
                The URL of the management UI which will only be returned in
                response to provisioning a server.
              type: string
              example: 'https://172.217.22.14:8006'
              readOnly: true
            managementAccessAllowedIps:
              description: >-
                List of IPs allowed to access the Management UI. Supported in
                single IP, CIDR and range format. When undefined, Management UI
                is disabled. This will only be returned in response to
                provisioning a server.
              type: array
              items:
                type: string
                example: 172.217.22.14
              minItems: 1
              example:
                - 172.217.22.14
                - 10.111.14.40/29
                - 10.111.14.66 - 10.111.14.71
    ServerReset:
      type: object
      description: Reset bare metal server.
      properties:
        installDefaultSshKeys:
          description: >-
            Whether or not to install SSH keys marked as default in addition to
            any SSH keys specified in this request.
          default: true
          type: boolean
          example: false
        sshKeys:
          description: A list of SSH keys that will be installed on the server.
          type: array
          items:
            type: string
            example: >-
              ssh-rsa
              AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
              user@my_ip
          example:
            - >-
              ssh-rsa
              AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
              user@my_ip
        sshKeyIds:
          description: >-
            A list of SSH key IDs that will be installed on the server in
            addition to any SSH keys specified in this request.
          type: array
          items:
            type: string
            example: 5fa942e71c16abcfbead275f
          example:
            - 5fa942e71c16abcfbead275f
            - 5fa94303cc6dc49346404fca
            - 5fa943127bda760ad80c237e
        osConfiguration:
          $ref: '#/components/schemas/OsConfigurationMap'
    ResetResult:
      type: object
      description: Result of a successful reset action.
      required:
        - result
      properties:
        result:
          description: Message describing the reset result.
          type: string
          example: Resetting server.
        password:
          description: >-
            Password set for user Admin on Windows server or user root on ESXi
            server.
          type: string
          example: MyP@ssw0rd_01
        osConfiguration:
          $ref: '#/components/schemas/OsConfigurationMap'
    ServerReserve:
      type: object
      description: Bare metal server reservation.
      required:
        - pricingModel
      properties:
        pricingModel:
          description: >-
            Server pricing model. Currently this field should be set to
            `ONE_MONTH_RESERVATION`, `TWELVE_MONTHS_RESERVATION`,
            `TWENTY_FOUR_MONTHS_RESERVATION` or `THIRTY_SIX_MONTHS_RESERVATION`.
          type: string
          example: ONE_MONTH_RESERVATION
    SshKey:
      type: object
      description: SSH Key.
      required:
        - id
        - name
        - default
        - key
        - fingerprint
        - createdOn
        - lastUpdatedOn
      properties:
        id:
          description: The unique identifier of the SSH Key.
          type: string
          example: 5fa54d1e91867c03a0a7b4a4
        default:
          description: >-
            Keys marked as default are always included on server creation and
            reset unless toggled off in creation/reset request.
          type: boolean
          example: true
        name:
          description: Friendly SSH key name to represent an SSH key.
          type: string
          example: sshkey-name-01
        key:
          description: SSH Key value.
          type: string
          example: >-
            ssh-rsa
            AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
            user@my_ip
        fingerprint:
          description: SSH key auto-generated SHA-256 fingerprint.
          type: string
          example: iL4k5YTrOnzvlxFMN+WU4BPI/QqrMcvvhU0xlfeMwZI
        createdOn:
          description: Date and time of creation.
          type: string
          format: date-time
          example: '2020-03-19T16:39:00Z'
        lastUpdatedOn:
          description: Date and time of last update.
          type: string
          format: date-time
          example: '2020-03-19T16:39:00Z'
    SshKeyCreate:
      type: object
      description: SSH key creation model.
      required:
        - default
        - name
        - key
      properties:
        default:
          description: >-
            Keys marked as default are always included on server creation and
            reset unless toggled off in creation/reset request.
          type: boolean
          example: true
        name:
          description: Friendly SSH key name to represent an SSH key.
          type: string
          minLength: 1
          maxLength: 100
          example: sshkey-name-01
        key:
          description: SSH key actual key value.
          type: string
          example: >-
            ssh-rsa
            AAAAB3NzaC1yc2EAAAADAQABAAABAQDF9LdAFElNCi7JoWh6KUcchrJ2Gac1aqGRPpdZNowObpRtmiRCecAMb7bUgNAaNfcmwiQi7tos9TlnFgprIcfMWb8MSs3ABYHmBgqEEt3RWYf0fAc9CsIpJdMCUG28TPGTlRXCEUVNKgLMdcseAlJoGp1CgbHWIN65fB3he3kAZcfpPn5mapV0tsl2p+ZyuAGRYdn5dJv2RZDHUZBkOeUobwsij+weHCKAFmKQKtCP7ybgVHaQjAPrj8MGnk1jBbjDt5ws+Be+9JNjQJee9zCKbAOsIo3i+GcUIkrw5jxPU/RTGlWBcemPaKHdciSzGcjWboapzIy49qypQhZe1U75
            user@my_ip
    SshKeyUpdate:
      type: object
      description: SSH key modification model.
      required:
        - default
        - name
      properties:
        default:
          description: >-
            Keys marked as default are always included on server creation and
            reset unless toggled off in creation/reset request.
          type: boolean
          example: true
        name:
          description: SSH key name that can represent the key as an alternative to its ID.
          type: string
          minLength: 1
          maxLength: 100
          example: sshkey-name-01
    DeleteSshKeyResult:
      type: object
      description: Result of a successful delete action on a SSH key.
      required:
        - result
        - sshKeyId
      properties:
        result:
          description: Resource has been deleted.
          type: string
          example: Resource has been deleted.
        sshKeyId:
          description: The unique identifier of the deleted resource.
          type: string
          example: 5fa54d1e91867c03a0a7b4a4
    QuotaEditLimitRequest:
      type: object
      description: A request to change the limit on a quota.
      required:
        - limit
        - reason
      properties:
        limit:
          description: The new limit that is requested.
          type: integer
          format: int32
          minimum: 0
          example: 10
        reason:
          description: The reason for changing the limit.
          type: string
          example: I need more servers for my cluster.
    QuotaEditLimitRequestDetails:
      allOf:
        - $ref: '#/components/schemas/QuotaEditLimitRequest'
        - type: object
          description: Pending quota modification requests yet to be reviewed.
          required:
            - requestedOn
          properties:
            requestedOn:
              type: string
              format: date-time
              description: The point in time the request was submitted.
              example: '2021-09-01T10:10:10Z'
    Quota:
      type: object
      description: Quota.
      required:
        - id
        - name
        - description
        - status
        - limit
        - used
        - unit
        - quotaEditLimitRequestDetails
      properties:
        id:
          description: The ID of the Quota.
          type: string
          example: bmc.servers.max_count
        name:
          description: The name of the Quota.
          type: string
          example: Servers
        description:
          description: The Quota description.
          type: string
          example: Maximum number of BMC servers
        status:
          description: The status of the quota resource usage.
          type: string
          enum:
            - WITHIN_LIMIT
            - OVER_LIMIT
            - ON_LIMIT
          example: OVER_LIMIT
        limit:
          description: The limit set for the quota.
          type: integer
          format: int32
          minimum: 0
          example: 2
        unit:
          description: Unit of the quota type. Supported values are 'COUNT' and 'GB'.
          type: string
          example: COUNT
        used:
          description: The quota used expressed as a number.
          type: integer
          format: int32
          minimum: 0
          example: 2
        quotaEditLimitRequestDetails:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/QuotaEditLimitRequestDetails'
  responses:
    Unauthorized:
      description: >-
        The request failed due to invalid credentials. Please check the provided
        credentials and try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: >-
        The request failed since this resource cannot be accessed by the
        provided credentials.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: >-
        The server encountered an unexpected condition that prevented it from
        fulfilling the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: >-
        The request failed due to wrong data. Please check the provided
        parameters and try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotAccepted:
      description: No server available of type server.type.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: The resource is in an incompatible state.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The request failed since the resource could not been found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    serverIdPathParam:
      in: path
      name: serverId
      required: true
      schema:
        type: string
      description: The server's ID.
      example: e6afba51-7de8-4080-83ab-0f915570659c
    ipBlockIdPathParam:
      in: path
      name: ipBlockId
      required: true
      schema:
        type: string
      description: The IP Block identifier.
      example: 6047127fed34ecc3ba8402d2
    privateNetworkIdPathParam:
      in: path
      name: privateNetworkId
      required: true
      schema:
        type: string
      description: The private network identifier.
      example: 603f3b2cfcaf050643b89a4b
    publicNetworkIdPathParam:
      in: path
      name: publicNetworkId
      required: true
      schema:
        type: string
      description: The Public Network identifier.
      example: 603f3b2cfcaf050643b89a4b
