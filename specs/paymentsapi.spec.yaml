openapi: 3.0.3
info:
  title: Payments API
  description: Payments API are currently designed to fetch Transactions only.
  termsOfService: https://phoenixnap.com/infrastructure-solutions/legal-it/privacy-shield-compliant-privacy-policy
  version: '0.1'
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: PhoenixNAP Team
    email: support@phoenixnap.com
    url: https://phoenixnap.com/
servers:
  - url: https://api.phoenixnap.com/payments/v1
security:
  - OAuth2:
      - transactions
      - transactions.read
tags:
  - name: Transactions
    description: Transactions Operations
paths:
  /transactions:
    get:
      tags:
        - Transactions
      description: A paginated list of client's transactions.
      summary: Get Transactions.
      operationId: transactionsGet
      parameters:
        - $ref: '#/components/parameters/pagingLimitParameter'
        - $ref: '#/components/parameters/pagingOffsetParameter'
        - $ref: '#/components/parameters/pagingSortDirectionParameter'
        - $ref: '#/components/parameters/pagingSortFieldParameter'
        - in: query
          name: from
          description: From the date and time (inclusive) to filter transactions by.
          required: false
          schema:
            type: string
            format: date-time
          example: '2021-04-27T16:24:57.123Z'
        - in: query
          name: to
          description: To the date and time (inclusive) to filter transactions by.
          required: false
          schema:
            type: string
            format: date-time
          example: '2021-04-29T16:24:57.123Z'
      security:
        - OAuth2:
            - transactions.read
      responses:
        '200':
          description: A Paginated list of client's transactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /transactions/{transactionId}:
    get:
      tags:
        - Transactions
      description: Get transaction details.
      summary: Get Transaction.
      operationId: transactionIdGet
      parameters:
        - in: path
          name: transactionId
          description: The transaction identifier.
          required: true
          schema:
            type: string
          example: 0a1b2c3d4f5g6h7i8j9k
      security:
        - OAuth2:
            - transactions.read
      responses:
        '200':
          description: Transaction details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth.phoenixnap.com/auth/realms/BMC/protocol/openid-connect/token
          scopes:
            transactions: Grants full access to transactions.
            transactions.read: Grants read only access to transactions.
  schemas:
    PaginatedTransactions:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          required:
            - results
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
      example:
        limit: 2
        offset: 10
        total: 342
        results:
          - id: 60ffafcdffb8b074c7968faf
            status: FAILED
            details: Transaction failed due to credit card expiration.
            amount: 10.99
            currency: USD
            date: '2023-04-27T16:24:57.123Z'
            metadata:
              invoiceId: '3088561'
              invoiceNumber: 1234-4321
              isAutoCharge: true
            cardPaymentMethodDetails:
              cardType: VISA
              lastFourDigits: '5666'
          - id: 60ed34cdffb8b074c7968faf
            status: SUCCESS
            details: ''
            amount: 50
            currency: USD
            date: '2024-01-27T12:32:18.123Z'
            metadata:
              invoiceId: '3088562'
              invoiceNumber: 1234-4322
              isAutoCharge: true
            cardPaymentMethodDetails:
              cardType: VISA
              lastFourDigits: '5666'
    Transaction:
      type: object
      description: Transaction response model.
      required:
        - id
        - status
        - amount
        - currency
        - date
        - metadata
        - cardPaymentMethodDetails
      properties:
        id:
          description: The Transaction ID.
          type: string
          example: 60ffafcdffb8b074c7968faf
        status:
          description: 'The Transaction status. Status may be: SUCCESS, PROCESSING, FAILED'
          type: string
          example: FAILED
        details:
          description: Details about the transaction. Contains failure reason in case of failed transactions.
          type: string
          example: Transaction failed due to credit card expiration.
        amount:
          description: The transaction amount.
          type: number
          example: 10.99
        currency:
          description: The transaction currency.
          type: string
          example: USD
        date:
          description: Date and time when transaction was created.
          type: string
          format: date-time
          example: '2023-04-27T16:24:57.123Z'
        metadata:
          $ref: '#/components/schemas/TransactionMetadata'
        cardPaymentMethodDetails:
          $ref: '#/components/schemas/CardPaymentMethodDetails'
    TransactionMetadata:
      type: object
      description: Transaction's metadata.
      required:
        - invoiceId
        - isAutoCharge
      properties:
        invoiceId:
          description: The Invoice ID that this transaction pertains to.
          type: string
          example: '3088561'
        invoiceNumber:
          description: A user-friendly reference number assigned to the invoice that this transaction pertains to.
          type: string
          example: 1234-4321
        isAutoCharge:
          description: Whether this transaction was triggered by an auto charge or not.
          type: boolean
          example: true
    CardPaymentMethodDetails:
      type: object
      description: Card payment details of a transaction.
      required:
        - cardType
        - lastFourDigits
      properties:
        cardType:
          description: 'The Card Type. Supported Card Types include: VISA, MASTERCARD, DISCOVER, JCB & AMEX.'
          type: string
          example: VISA
        lastFourDigits:
          description: The last four digits of the card number.
          type: string
          pattern: \d{4}$
          example: '5666'
    PaginatedResponse:
      type: object
      required:
        - limit
        - offset
        - total
      properties:
        limit:
          type: integer
          description: Maximum number of items in the page (actual returned length can be less).
          example: 5
        offset:
          type: integer
          description: The number of returned items skipped.
          example: 25
        total:
          type: integer
          format: int64
          description: The total number of records available for retrieval.
          example: 400
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          readOnly: true
          description: The description detailing the cause of the error code.
        validationErrors:
          type: array
          items:
            type: string
          readOnly: true
          description: Validation errors, if any.
  parameters:
    pagingLimitParameter:
      in: query
      name: limit
      schema:
        type: integer
        default: 100
        minimum: 1
        maximum: 1000
      required: false
      description: The limit of the number of results returned. The number of records returned may be smaller than the limit.
      example: 25
    pagingOffsetParameter:
      in: query
      name: offset
      schema:
        type: integer
        default: 0
        minimum: 0
      required: false
      description: The number of items to skip in the results.
      example: 5
    pagingSortDirectionParameter:
      in: query
      name: sortDirection
      schema:
        type: string
        enum:
          - ASC
          - DESC
        default: DESC
      required: false
      description: Sort Given Field depending on the desired direction. Default sorting is descending.
    pagingSortFieldParameter:
      in: query
      name: sortField
      schema:
        type: string
        enum:
          - date
          - amount
          - status
          - cardPaymentMethodDetails.cardType
          - cardPaymentMethodDetails.lastFourDigits
          - metadata.invoiceId
          - metadata.isAutoCharge
        default: date
      required: false
      description: If a sortField is requested, pagination will be done after sorting. Default sorting is by date.
  responses:
    BadRequest:
      description: The request failed due to wrong data. Please check the provided parameters and try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: The request failed due to invalid credentials. Please check the provided credentials and try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: The request failed since this resource cannot be accessed by the provided credentials.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: The server encountered an unexpected condition that prevented it from fulfilling the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
